======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.500903
Average coupling per class: 0.982143
Average cohesion among methods per class: 0.532106
Average amount of user defined attributes declared per class: 0.254464
Average functional abstraction per class: 0.194671
Average amount of polymorphic methods per class: 0.285714
Average amount of public methods per class: 3.441964
Average amount of methods per class: 5.660714
Average amount of complexity of methods per class: 117.977676
Ratio of interfaces to overall amount of classes: 0.000000
Average ratio of abstract classes/methods per class: 0.002000
Average ratio of static classes/methods/variables per class: 0.313519
Average ratio of final classes/methods/variables per class: 0.045438
Average ratio of constant classes/methods/variables per class: 0.058448
Ratio of inner classes to overall amount of ordinary classes in project: 0.089286
Average inherited referenced methods ratio per class: 0.067094
Average visibility ratio per class: 0.594805
Amount of lines of code in project: 45136
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Make Method Final" applied at class FibonacciSOAPClient to method handleFault(nu.xom.Element)
Iteration 2: "Make Method Final" applied at class PropertyPrinter to method writeNode(nu.xom.Node)
Iteration 3: "Make Field Final" applied at class ExampleExtractor to ParameterDeclaration element [in method extract(nu.xom.Element)]
Iteration 4: "Remove Method" applied at class Canonicalizer to method setInclusiveNamespacePrefixList(java.lang.String)
Iteration 5: "Make Field Final" applied at class CanonicalizerDriver to ParameterDeclaration args [in method main(java.lang.String[])]
Iteration 6: "Decrease Method Visibility" applied at class Latin6Writer to method Latin6Writer(java.io.Writer,java.lang.String) from package to protected
Iteration 7: "Decrease Method Visibility" applied at class Comment to method Comment() from private to package
Iteration 8: "Make Method Final" applied at class TextWriterFactory to method getTextWriter(java.io.Writer,java.lang.String)
Iteration 9: "Remove Method" applied at class ProcessingInstruction to method setTarget(java.lang.String)
Iteration 10: "Decrease Method Visibility" applied at class StreamingXHTMLPurifier to method inXHTML() from private to package
Iteration 11: "Make Method Final" applied at class XPathException to method initCause(java.lang.Throwable)
Iteration 12: "Decrease Method Visibility" applied at class Latin6Writer to method Latin6Writer(java.io.Writer,java.lang.String) from protected to public
Iteration 13: "Decrease Method Visibility" applied at class Comment to method Comment() from package to protected
Iteration 14: "Decrease Method Visibility" applied at class StreamingXHTMLPurifier to method inXHTML() from package to protected
Iteration 15: "Make Field Non Static" applied at class FibonacciXOMSOAPServlet to field UNEXPECTED_PROBLEM
Iteration 16: "Move Method Down" applied to method findActualBaseURI() from ParentNode to Element
Iteration 17: "Make Class Abstract" applied to class XPointerException
Iteration 18: "Decrease Method Visibility" applied at class StreamingElementLister to method printSpaces() from private to package
Iteration 19: "Decrease Method Visibility" applied at class StreamingXHTMLPurifier to method inXHTML() from protected to public
Iteration 20: "Decrease Method Visibility" applied at class StreamingElementLister to method printSpaces() from package to protected
Iteration 21: "Move Method Down" applied to method hashCode() from Node to Attribute
Iteration 22: "Decrease Method Visibility" applied at class Comment to method Comment() from protected to public
Iteration 23: "Decrease Method Visibility" applied at class StreamingElementLister to method printSpaces() from protected to public
Iteration 24: "Make Method Final" applied at class AttributesXMLBudget to method setAmount(nu.xom.Element,java.lang.String,java.util.Map)
Iteration 25: "Make Field Final" applied at class CycleException to ParameterDeclaration message [in method CycleException(java.lang.String,java.lang.Throwable)]
Iteration 26: "Decrease Method Visibility" applied at class Reproducer to method copy(nu.xom.Element) from private to package
Iteration 27: "Decrease Method Visibility" applied at class Reproducer to method copy(nu.xom.Element) from package to protected
Iteration 28: "Decrease Method Visibility" applied at class Reproducer to method copy(nu.xom.Element) from protected to public
Iteration 29: "Decrease Method Visibility" applied at class SourceCodeGenerator to method javaEscape(java.lang.String) from private to package
Iteration 30: "Decrease Method Visibility" applied at class SourceCodeGenerator to method javaEscape(java.lang.String) from package to protected
Iteration 31: "Decrease Method Visibility" applied at class DocumentFragment to method insertionAllowed(nu.xom.Node,int) from package to protected
Iteration 32: "Decrease Method Visibility" applied at class SourceCodeGenerator to method javaEscape(java.lang.String) from protected to public
Iteration 33: "Decrease Method Visibility" applied at class DocumentFragment to method insertionAllowed(nu.xom.Node,int) from protected to public
Iteration 34: "Move Method Down" applied to method getChild(int) from Text to CDATASection
Iteration 35: "Make Method Static" applied at class UCSWriter to method needsEscaping(char)
Iteration 36: "Move Method Down" applied to method getChildCount() from Text to CDATASection
Iteration 37: "Decrease Field Visibility" applied at class WrappingSerializer to field maxLength from private to package
Iteration 38: "Make Class Final" applied to class ProcessingInstruction
Iteration 39: "Make Method Static" applied at class ISOThaiWriter to method needsEscaping(char)
Iteration 40: "Make Class Final" applied to class Transformer
Iteration 41: "Remove Method" applied at class TextSerializer to method writeText(nu.xom.Text)
Iteration 42: "Increase Method Visibility" applied at class EZSerializer to method write(nu.xom.Document,java.io.OutputStream) from public to protected
Iteration 43: "Make Method Final" applied at class XSLException to method getCause()
Iteration 44: "Make Method Non Static" applied at class XHTMLQualifier to method qualify(nu.xom.Element)
Iteration 45: "Remove Method" applied at class EZSerializer to method write(nu.xom.Document,java.io.OutputStream,java.lang.String,int,int)
Iteration 46: "Increase Field Visibility" applied at class RDDLToTable to field RDDL_NAMESPACE from public to protected
Iteration 47: "Make Class Final" applied to class NoSuchAttributeException
Iteration 48: "Move Method Up" applied to method rot13(java.lang.String) from StreamingROT13 to NodeFactory
Iteration 49: "Decrease Field Visibility" applied at class WrappingSerializer to field maxLength from package to protected
Iteration 50: "Increase Method Visibility" applied at class EZSerializer to method write(nu.xom.Document,java.io.OutputStream) from protected to package
Iteration 51: "Increase Field Visibility" applied at class RDDLToTable to field RDDL_NAMESPACE from protected to package
Iteration 52: "Decrease Method Visibility" applied at class NodeFactory to method makeCDATASection(java.lang.String) from package to protected
Iteration 53: "Make Class Final" applied to class AttributesToElements
Iteration 54: "Decrease Method Visibility" applied at class Text to method isEmpty() from package to protected
Iteration 55: "Make Field Non Static" applied at class Bureau to field instances
Iteration 56: "Move Method Down" applied to method toString() from Text to CDATASection

Score has improved overall by 0.698062
Time taken to refactor: 950.70s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.502392
Average coupling per class: 0.977679
Average cohesion among methods per class: 0.533125
Average amount of user defined attributes declared per class: 0.254464
Average functional abstraction per class: 0.194997
Average amount of polymorphic methods per class: 0.285714
Average amount of public methods per class: 3.455357
Average amount of methods per class: 5.642857
Average amount of complexity of methods per class: 117.857140
Ratio of interfaces to overall amount of classes: 0.000000
Average ratio of abstract classes/methods per class: 0.002976
Average ratio of static classes/methods/variables per class: 0.313217
Average ratio of final classes/methods/variables per class: 0.050819
Average ratio of constant classes/methods/variables per class: 0.062026
Ratio of inner classes to overall amount of ordinary classes in project: 0.089286
Average inherited referenced methods ratio per class: 0.068159
Average visibility ratio per class: 0.597252
Amount of lines of code in project: 45136
Overall fitness function score: 0.698062