======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.530811
Average coupling per class: 0.994595
Average cohesion among methods per class: 0.486189
Average amount of user defined attributes declared per class: 0.594595
Average functional abstraction per class: 0.320375
Average amount of polymorphic methods per class: 0.589189
Average amount of public methods per class: 2.870270
Average amount of methods per class: 4.237838
Average amount of complexity of methods per class: 30.735136
Ratio of interfaces to overall amount of classes: 0.200000
Average ratio of abstract classes/methods per class: 0.234299
Average ratio of static classes/methods/variables per class: 0.137684
Average ratio of final classes/methods/variables per class: 0.106994
Average ratio of constant classes/methods/variables per class: 0.089900
Ratio of inner classes to overall amount of ordinary classes in project: 0.129730
Average inherited referenced methods ratio per class: 0.279704
Average visibility ratio per class: 0.588081
Amount of lines of code in project: 14241
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Decrease Method Visibility" applied at class DoubleParser to method setResult(java.lang.String) from protected to public
Iteration 2: "Make Field Non Final" applied at class XmlRpcWorkerFactory to FieldDeclaration controller
Iteration 3: "Decrease Method Visibility" applied at class RequestProcessorFactoryFactory\RequestSpecificProcessorFactoryFactory to method getRequestProcessor(java.lang.Class,org.apache.xmlrpc.XmlRpcRequest) from protected to public
Iteration 4: "Decrease Method Visibility" applied at class BaseXmlWriterFactory to method newXmlWriter() from protected to public
Iteration 5: "Decrease Method Visibility" applied at class MapParser to method addResult(java.lang.Object) from protected to public
Iteration 6: "Decrease Method Visibility" applied at class ObjectArrayParser to method addResult(java.lang.Object) from protected to public
Iteration 7: "Decrease Field Visibility" applied at class Util to field jaxbElementClass from private to package
Iteration 8: "Decrease Method Visibility" applied at class XmlRpcHttpRequestConfig to method getConnectionTimeout() from package to protected
Iteration 9: "Decrease Method Visibility" applied at class XmlRpcStreamRequestProcessor to method execute(org.apache.xmlrpc.common.XmlRpcStreamRequestConfig,org.apache.xmlrpc.common.ServerStreamConnection) from package to protected
Iteration 10: "Make Field Non Final" applied at class XmlRpcWriter to FieldDeclaration config
Iteration 11: "Move Method Down" applied to method write(org.xml.sax.ContentHandler,java.lang.Object) from ObjectArraySerializer to ListSerializer
Iteration 12: "Make Method Static" applied at class JaxbParser to method getTagName()
Iteration 13: "Move Field Up" applied to field USER_AGENT from XmlRpcHttpTransport to XmlRpcStreamTransport
Iteration 14: "Make Method Final" applied at class XmlRpcController to method getMaxThreads()
Iteration 15: "Make Class Final" applied to class XmlRpcInvocationException
Iteration 16: "Make Method Final" applied at class BigIntegerParser to method setResult(java.lang.String)
Iteration 17: "Move Field Up" applied to field USER_AGENT from XmlRpcStreamTransport to XmlRpcTransportImpl
Iteration 18: "Increase Method Visibility" applied at class BaseXmlWriterFactory to method newXmlWriter() from public to protected
Iteration 19: "Decrease Method Visibility" applied at class XmlRpcServlet to method handleInitParameters(javax.servlet.ServletConfig) from private to package
Iteration 20: "Decrease Method Visibility" applied at class XmlRpcServlet to method handleInitParameters(javax.servlet.ServletConfig) from package to protected
Iteration 21: "Make Class Final" applied to class XmlRpcServletServer
Iteration 22: "Decrease Method Visibility" applied at class JaxbSerializer to method getTagName() from protected to public
Iteration 23: "Increase Method Visibility" applied at class DoubleParser to method setResult(java.lang.String) from public to protected
Iteration 24: "Make Method Static" applied at class ServletWebServer\1931756330\1814810059 to method getInitParameter(java.lang.String)
Iteration 25: "Move Method Up" applied to method newSocket(boolean,java.lang.String,int) from XmlRpcLiteHttpTransport to XmlRpcHttpTransport
Iteration 26: "Make Field Final" applied at class XmlRpcController to FieldDeclaration maxThreads
Iteration 27: "Make Field Final" applied at class I8Parser to ParameterDeclaration pResult [in method setResult(java.lang.String)]
Iteration 28: "Make Method Static" applied at class XmlRpcLocalStreamTransport to method isResponseGzipCompressed(org.apache.xmlrpc.common.XmlRpcStreamRequestConfig)
Iteration 29: "Move Method Up" applied to method isUsingByteArrayOutput(org.apache.xmlrpc.client.XmlRpcHttpClientConfig) from XmlRpcHttpTransport to XmlRpcStreamTransport
Iteration 30: "Make Field Static" applied at class RecursiveTypeParserImpl to field context
Iteration 31: "Make Method Final" applied at class XmlRpcLocalStreamTransport to method isResponseGzipCompressed(org.apache.xmlrpc.common.XmlRpcStreamRequestConfig)
Iteration 32: "Remove Method" applied at class XmlRpcClient to method execute(java.lang.String,java.util.List)
Iteration 33: "Move Field Up" applied to field sb from AtomicParser to TypeParserImpl
Iteration 34: "Make Field Static" applied at class JaxbParser to field context
Iteration 35: "Decrease Method Visibility" applied at class BaseXmlWriterFactory to method newXmlWriter() from protected to public
Iteration 36: "Make Method Static" applied at class XmlRpcLocalTransport to method isExtensionType(java.lang.Object)
Iteration 37: "Increase Method Visibility" applied at class BaseXmlWriterFactory to method newXmlWriter() from public to protected
Iteration 38: "Make Method Non Static" applied at class XmlRpcLocalTransport to method isExtensionType(java.lang.Object)
Iteration 39: "Decrease Method Visibility" applied at class ExtParser to method getTagName() from protected to public
Iteration 40: "Make Field Final" applied at class HttpServletResponseImpl to ParameterDeclaration pStatusCode [in method sendError(int,java.lang.String)]
Iteration 41: "Remove Method" applied at class XmlRpcLite14HttpTransportFactory to method getSSLSocketFactory()
Iteration 42: "Remove Method" applied at class XmlRpcController to method setTypeFactory(org.apache.xmlrpc.common.TypeFactory)
Iteration 43: "Decrease Field Visibility" applied at class JaxbTypeFactory to field context from private to package
Iteration 44: "Decrease Field Visibility" applied at class JaxbTypeFactory to field context from package to protected
Iteration 45: "Decrease Method Visibility" applied at class XmlRpcStreamConfig to method getEncoding() from package to protected
Iteration 46: "Decrease Field Visibility" applied at class XmlRpcIOException to field serialVersionUID from private to package
Iteration 47: "Make Method Static" applied at class XmlRpcLocalTransport to method isExtensionType(java.lang.Object)
Iteration 48: "Make Method Final" applied at class SAXParsers to method newXMLReader()
Iteration 49: "Make Class Concrete" applied to class AbstractReflectiveHandlerMapping

Score has improved overall by 0.142569
Time taken to refactor: 392.74s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.530811
Average coupling per class: 0.994595
Average cohesion among methods per class: 0.486638
Average amount of user defined attributes declared per class: 0.594595
Average functional abstraction per class: 0.320330
Average amount of polymorphic methods per class: 0.589189
Average amount of public methods per class: 2.881081
Average amount of methods per class: 4.221622
Average amount of complexity of methods per class: 30.686487
Ratio of interfaces to overall amount of classes: 0.200000
Average ratio of abstract classes/methods per class: 0.234019
Average ratio of static classes/methods/variables per class: 0.142194
Average ratio of final classes/methods/variables per class: 0.113194
Average ratio of constant classes/methods/variables per class: 0.094108
Ratio of inner classes to overall amount of ordinary classes in project: 0.129730
Average inherited referenced methods ratio per class: 0.280619
Average visibility ratio per class: 0.592189
Amount of lines of code in project: 14241
Overall fitness function score: 0.142569