======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.530811
Average coupling per class: 0.994595
Average cohesion among methods per class: 0.486189
Average amount of user defined attributes declared per class: 0.594595
Average functional abstraction per class: 0.320375
Average amount of polymorphic methods per class: 0.589189
Average amount of public methods per class: 2.870270
Average amount of methods per class: 4.237838
Average amount of complexity of methods per class: 30.735136
Ratio of interfaces to overall amount of classes: 0.200000
Average ratio of abstract classes/methods per class: 0.234299
Average ratio of static classes/methods/variables per class: 0.137684
Average ratio of final classes/methods/variables per class: 0.106994
Average ratio of constant classes/methods/variables per class: 0.089900
Ratio of inner classes to overall amount of ordinary classes in project: 0.129730
Average inherited referenced methods ratio per class: 0.279704
Average visibility ratio per class: 0.588081
Amount of lines of code in project: 14241
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Make Class Concrete" applied to class XmlRpcStreamTransportFactory
Iteration 2: "Move Method Down" applied to method write(org.xml.sax.ContentHandler,java.lang.Object) from ObjectArraySerializer to ListSerializer
Iteration 3: "Make Field Static" applied at class RecursiveTypeParserImpl to field context
Iteration 4: "Make Class Final" applied to class FloatParser
Iteration 5: "Make Class Final" applied to class XmlRpcClientConfigImpl
Iteration 6: "Make Field Static" applied at class RecursiveTypeParserImpl to field inValueTag
Iteration 7: "Make Method Final" applied at class XmlRpcTransportImpl to method getClient()
Iteration 8: "Make Method Final" applied at class XmlRpcWorkerFactory to method getCurrentRequests()
Iteration 9: "Make Method Final" applied at class SAXParsers to method newXMLReader()
Iteration 10: "Decrease Method Visibility" applied at class ObjectArraySerializer to method writeObject(org.xml.sax.ContentHandler,java.lang.Object) from protected to public
Iteration 11: "Make Class Concrete" applied to class XmlRpcTransportFactoryImpl
Iteration 12: "Collapse Hierarchy" applied from all elements in XmlRpcLocalStreamTransportFactory to XmlRpcStreamTransportFactory
Iteration 13: "Make Field Static" applied at class XmlRpcWorkerFactory to field controller
Iteration 14: "Remove Method" applied at class WebServer to method start()
Iteration 15: "Increase Field Visibility" applied at class I1Serializer to field EX_I1_TAG from public to protected
Iteration 16: "Increase Field Visibility" applied at class I1Serializer to field EX_I1_TAG from protected to package
Iteration 17: "Decrease Method Visibility" applied at class BooleanParser to method setResult(java.lang.String) from protected to public
Iteration 18: "Remove Method" applied at class ServletWebServer\Exception to method getDescription()
Iteration 19: "Make Class Final" applied to class I8Parser
Iteration 20: "Make Method Final" applied at class XmlRpcClientWorkerFactory to method newWorker()
Iteration 21: "Decrease Method Visibility" applied at class XmlRpcLite14HttpTransport to method newSocket(boolean,java.lang.String,int) from protected to public
Iteration 22: "Make Method Static" applied at class XmlRpcWorkerFactory to method getController()
Iteration 23: "Decrease Method Visibility" applied at class I2Parser to method setResult(java.lang.String) from protected to public
Iteration 24: "Increase Field Visibility" applied at class I1Serializer to field EX_I1_TAG from package to private
Iteration 25: "Make Class Abstract" applied to class XmlRpcServer
Iteration 26: "Remove Method" applied at class XmlRpcServerConfigImpl to method setEnabledForExceptions(boolean)
Iteration 27: "Make Field Final" applied at class XmlRpcTransportImpl to ParameterDeclaration pClient [in method XmlRpcTransportImpl(org.apache.xmlrpc.client.XmlRpcClient)]
Iteration 28: "Make Method Final" applied at class StringParser to method setResult(java.lang.String)
Iteration 29: "Make Class Final" applied to class XmlRpcServlet
Iteration 30: "Make Field Static" applied at class LimitedInputStream to field markedAvailable
Iteration 31: "Increase Field Visibility" applied at class I8Serializer to field EX_I8_TAG from public to protected
Iteration 32: "Decrease Method Visibility" applied at class ConnectionServer to method writeError(org.apache.xmlrpc.common.XmlRpcStreamRequestConfig,java.io.OutputStream,java.lang.Throwable) from protected to public
Iteration 33: "Remove Method" applied at class PropertyHandlerMapping to method removeHandler(java.lang.String)
Iteration 34: "Increase Method Visibility" applied at class PropertyHandlerMapping to method load(java.lang.ClassLoader,java.lang.String) from public to protected

Score has improved overall by 0.191150
Time taken to refactor: 438.01s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.539130
Average coupling per class: 0.989130
Average cohesion among methods per class: 0.483158
Average amount of user defined attributes declared per class: 0.597826
Average functional abstraction per class: 0.318493
Average amount of polymorphic methods per class: 0.592391
Average amount of public methods per class: 2.880435
Average amount of methods per class: 4.233696
Average amount of complexity of methods per class: 30.771740
Ratio of interfaces to overall amount of classes: 0.201087
Average ratio of abstract classes/methods per class: 0.231647
Average ratio of static classes/methods/variables per class: 0.140815
Average ratio of final classes/methods/variables per class: 0.118268
Average ratio of constant classes/methods/variables per class: 0.093226
Ratio of inner classes to overall amount of ordinary classes in project: 0.130435
Average inherited referenced methods ratio per class: 0.281224
Average visibility ratio per class: 0.591322
Amount of lines of code in project: 14194
Overall fitness function score: 0.191150