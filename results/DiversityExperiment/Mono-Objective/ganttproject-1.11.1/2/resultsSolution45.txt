======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.595169
Average coupling per class: 1.464531
Average cohesion among methods per class: 0.387374
Average amount of user defined attributes declared per class: 1.164760
Average functional abstraction per class: 0.121799
Average amount of polymorphic methods per class: 0.796339
Average amount of public methods per class: 4.201373
Average amount of methods per class: 5.958810
Average amount of complexity of methods per class: 55.004578
Ratio of interfaces to overall amount of classes: 0.144165
Average ratio of abstract classes/methods per class: 0.160421
Average ratio of static classes/methods/variables per class: 0.068946
Average ratio of final classes/methods/variables per class: 0.055335
Average ratio of constant classes/methods/variables per class: 0.019310
Ratio of inner classes to overall amount of ordinary classes in project: 0.267735
Average inherited referenced methods ratio per class: 0.061447
Average visibility ratio per class: 0.568681
Amount of lines of code in project: 39527
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Decrease Method Security" applied at class ExportException to method ExportException from package to protected
Iteration 2: "Make Method Non Static" applied at class GanttProject to method getExceptionReport
Iteration 3: "Increase Field Security" applied at class GanttExportSettings to field name,percent,depend,border3d,ok from public to protected
Iteration 4: "Decrease Method Security" applied at class TaskManagerImpl to method TaskManagerImpl from package to protected
Iteration 5: "Make Method Static" applied at class NewArtefactAction to method getIconFilePrefix
Iteration 6: "Make Field Static" applied at class ChartComponentBase to field myUIFacade
Iteration 7: "Decrease Method Security" applied at class NewHumanAction to method getProjectFrame from private to package
Iteration 8: "Decrease Method Security" applied at class ChartModelBase to method enableRenderers1 from protected to public
Iteration 9: "Decrease Method Security" applied at class GanttMPXJSaver to method processRelationships from private to package
Iteration 10: "Make Class Concrete" applied to class WizardImpl
Iteration 11: "Remove Method" applied at class GanttTree to method getTask
Iteration 12: "Make Class Abstract" applied to class GraphicPrimitive
Iteration 13: "Increase Field Security" applied at class GanttXFIGSaver to field code from package to private
Iteration 14: "Increase Method Security" applied at class TimeUnitImpl to method getTextFormatter from protected to package
Iteration 15: "Make Class Abstract" applied to class ChartImplementationBase
Iteration 16: "Move Method Up" applied to method drawGPVersion from GanttGraphicArea to ChartComponentBase
Iteration 17: "Make Class Concrete" applied to class MouseInteractionBase
Iteration 18: "Make Class Abstract" applied to class SaverBase
Iteration 19: "Decrease Method Security" applied at class TaskListener to method taskAdded from package to protected
Iteration 20: "Make Class Concrete" applied to class SaverBase
Iteration 21: "Decrease Method Security" applied at class ResourcesTableModel to method createAssignment from private to package
Iteration 22: "Make Class Abstract" applied to class SaverBase
Iteration 23: "Make Class Concrete" applied to class SaverBase
Iteration 24: "Decrease Method Security" applied at class ResourcesTableModel to method createAssignment from package to protected
Iteration 25: "Make Method Final" applied at class Shape to method getPattern
Iteration 26: "Make Class Abstract" applied to class ProjectExportData
Iteration 27: "Make Method Static" applied at class ZoomInAction to method getIconFilePrefix
Iteration 28: "Increase Method Security" applied at class BackgroundRendererImpl to method beforeProcessingTimeFrames from public to protected
Iteration 29: "Make Method Non Final" applied at class Shape to method getPattern
Iteration 30: "Make Class Final" applied to class TaskProgressChartItem
Iteration 31: "Make Class Abstract" applied to class SaverBase
Iteration 32: "Make Class Concrete" applied to class SaverBase
Iteration 33: "Make Class Abstract" applied to class SaverBase
Iteration 34: "Make Class Concrete" applied to class SaverBase
Iteration 35: "Increase Method Security" applied at class GanttCalendarDays to method remove from public to protected
Iteration 36: "Make Method Final" applied at class ColorValueParser to method parseString
Iteration 37: "Decrease Method Security" applied at class TaskActivity to method isLast from package to protected
Iteration 38: "Make Field Static" applied at class WeekFramerImpl to field myDayFramer
Iteration 39: "Make Class Final" applied to class TuningOptions
Iteration 40: "Make Method Non Static" applied at class DateParser to method check

Score has improved overall by 0.165536
Time taken to refactor: 1877.88s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.597458
Average coupling per class: 1.464531
Average cohesion among methods per class: 0.387358
Average amount of user defined attributes declared per class: 1.164760
Average functional abstraction per class: 0.121956
Average amount of polymorphic methods per class: 0.798627
Average amount of public methods per class: 4.196796
Average amount of methods per class: 5.956522
Average amount of complexity of methods per class: 54.977116
Ratio of interfaces to overall amount of classes: 0.144165
Average ratio of abstract classes/methods per class: 0.161473
Average ratio of static classes/methods/variables per class: 0.070059
Average ratio of final classes/methods/variables per class: 0.056365
Average ratio of constant classes/methods/variables per class: 0.021485
Ratio of inner classes to overall amount of ordinary classes in project: 0.267735
Average inherited referenced methods ratio per class: 0.061507
Average visibility ratio per class: 0.567053
Amount of lines of code in project: 39527
Overall fitness function score: 0.165536