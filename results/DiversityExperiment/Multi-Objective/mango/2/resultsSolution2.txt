======== Search Information ========
Search: Multi-Objective Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Fitness function 1 score: 0.000000
Fitness function 2 score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Decrease Method Security" applied at class TeeIterator to method TeeIterator from private to package
Iteration 2: "Make Field Non Final" applied at class Helpers to ParameterDeclaration iterables
Iteration 3: "Decrease Method Security" applied at class TeeIterator to method TeeIterator from package to protected
Iteration 4: "Decrease Method Security" applied at class Iterators to method Iterators from private to package
Iteration 5: "Decrease Method Security" applied at class BinaryPredicates to method BinaryPredicates from private to package
Iteration 6: "Decrease Method Security" applied at class Bind to method Bind from private to package
Iteration 7: "Make Method Final" applied at class Find to method execute
Iteration 8: "Make Field Final" applied at class Or to ParameterDeclaration pred1
Iteration 9: "Make Method Static" applied at class LessThanEquals to method test
Iteration 10: "Make Method Non Static" applied at class Generators to method NullSequence
Iteration 11: "Decrease Method Security" applied at class SymmetricDifference to method SymmetricDifference from private to package
Iteration 12: "Decrease Method Security" applied at class FindIf to method FindIf from private to package
Iteration 13: "Decrease Method Security" applied at class CountIf to method CountIf from private to package
Iteration 14: "Decrease Method Security" applied at class Predicates to method Predicates from private to package
Iteration 15: "Decrease Method Security" applied at class TeeIterator to method TeeIterator from protected to public
Iteration 16: "Make Method Non Static" applied at class Predicates to method NotNull
Iteration 17: "Decrease Method Security" applied at class Adapt to method wrapMethod from private to package
Iteration 18: "Decrease Method Security" applied at class FindPositionIf to method FindPositionIf from private to package
Iteration 19: "Decrease Method Security" applied at class Algorithms to method Algorithms from private to package
Iteration 20: "Make Field Static" applied at class Xor to field p1_
Iteration 21: "Decrease Method Security" applied at class BinaryFunctions to method BinaryFunctions from private to package
Iteration 22: "Make Method Final" applied at class Transform to method execute
Iteration 23: "Make Field Static" applied at class BoundedIterator to field end_
Iteration 24: "Decrease Field Security" applied at class ArrayIterator to field array_ from private to package
Iteration 25: "Make Field Non Final" applied at class OneOf to FieldDeclaration preds_
Iteration 26: "Decrease Method Security" applied at class MapFactory to method Builder from private to package
Iteration 27: "Make Method Final" applied at class Xor to method test
Iteration 28: "Decrease Method Security" applied at class FindIf to method FindIf from package to protected
Iteration 29: "Decrease Method Security" applied at class CountIfNot to method CountIfNot from private to package
Iteration 30: "Increase Field Security" applied at class TeeIterator to field index from public to protected
Iteration 31: "Make Field Non Static" applied at class BoundedIterator to field end_
Iteration 32: "Decrease Method Security" applied at class Predicates to method Predicates from package to protected
Iteration 33: "Decrease Field Security" applied at class ZipIterator to field zip_ from private to package
Iteration 34: "Decrease Method Security" applied at class Predicates to method Predicates from protected to public
Iteration 35: "Increase Method Security" applied at class BinaryPredicates to method Or from public to protected
Iteration 36: "Decrease Method Security" applied at class Find to method Find from private to package
Iteration 37: "Make Method Final" applied at class ListFactory to method list
Iteration 38: "Decrease Method Security" applied at class Iterators to method Iterators from package to protected
Iteration 39: "Make Method Final" applied at class IntegerSequence to method fn
Iteration 40: "Make Method Final" applied at class StringIterator to method hasNext
Iteration 41: "Decrease Method Security" applied at class ForEach to method ForEach from private to package
Iteration 42: "Decrease Method Security" applied at class FindPosition to method FindPosition from private to package
Iteration 43: "Decrease Method Security" applied at class Transform to method Transform from private to package
Iteration 44: "Decrease Method Security" applied at class Intersection to method Intersection from private to package
Iteration 45: "Decrease Method Security" applied at class Intersection to method Intersection from package to protected
Iteration 46: "Make Class Final" applied to class Iterators
Iteration 47: "Make Class Final" applied to class ZipIterator
Iteration 48: "Decrease Method Security" applied at class SkippingIterator to method findNext from private to package
Iteration 49: "Make Method Non Static" applied at class Helpers to method toIterator
Iteration 50: "Decrease Method Security" applied at class Collections to method Collections from private to package
Iteration 51: "Decrease Method Security" applied at class FindPosition to method FindPosition from package to protected
Iteration 52: "Decrease Method Security" applied at class Algorithms to method Algorithms from package to protected
Iteration 53: "Decrease Method Security" applied at class BinaryPredicates to method BinaryPredicates from package to protected
Iteration 54: "Decrease Method Security" applied at class BoundedIterator to method checkConstraints from private to package
Iteration 55: "Remove Method" applied at class Predicates to method True
Iteration 56: "Make Class Final" applied to class Constant
Iteration 57: "Increase Method Security" applied at class Bind to method First from public to protected
Iteration 58: "Make Method Final" applied at class NullIterator to method next
Iteration 59: "Decrease Method Security" applied at class FindIf to method FindIf from protected to public
Iteration 60: "Decrease Method Security" applied at class SkippingIterator to method findNext from package to protected
Iteration 61: "Decrease Method Security" applied at class MapFactory to method Builder from package to protected
Iteration 62: "Decrease Method Security" applied at class Remove to method Remove from private to package
Iteration 63: "Remove Method" applied at class Adapt to method Method
Iteration 64: "Decrease Method Security" applied at class Iterators to method Iterators from protected to public
Iteration 65: "Decrease Method Security" applied at class FindIfNot to method FindIfNot from private to package
Iteration 66: "Make Class Final" applied to class Not
Iteration 67: "Make Method Non Static" applied at class Predicates to method IsNull
Iteration 68: "Remove Method" applied at class BinaryFunctions to method Compose
Iteration 69: "Decrease Method Security" applied at class BinaryPredicates to method BinaryPredicates from protected to public
Iteration 70: "Decrease Method Security" applied at class FindIfNot to method FindIfNot from package to protected
Iteration 71: "Make Class Final" applied to class TransformIterator
Iteration 72: "Decrease Method Security" applied at class Intersection to method Intersection from protected to public
Iteration 73: "Decrease Method Security" applied at class SymmetricDifference to method SymmetricDifference from package to protected
Iteration 74: "Decrease Method Security" applied at class BinaryFunctions to method BinaryFunctions from package to protected
Iteration 75: "Decrease Method Security" applied at class FindIfNot to method FindIfNot from protected to public

Time taken to refactor: 114.79s

======== Final Metric Info ========
Fitness function 1 score: 0.420730
Fitness function 2 score: 34.680000

This solution has the closest maximum distance from the ideal point in the top rank of solutions