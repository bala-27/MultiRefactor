======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.500903
Average coupling per class: 0.982143
Average cohesion among methods per class: 0.532106
Average amount of user defined attributes declared per class: 0.254464
Average functional abstraction per class: 0.194671
Average amount of polymorphic methods per class: 0.285714
Average amount of public methods per class: 3.441964
Average amount of methods per class: 5.660714
Average amount of complexity of methods per class: 117.977676
Ratio of interfaces to overall amount of classes: 0.000000
Average ratio of abstract classes/methods per class: 0.002000
Average ratio of static classes/methods/variables per class: 0.313519
Average ratio of final classes/methods/variables per class: 0.045438
Average ratio of constant classes/methods/variables per class: 0.058448
Ratio of inner classes to overall amount of ordinary classes in project: 0.089286
Average inherited referenced methods ratio per class: 0.067094
Average visibility ratio per class: 0.594805
Amount of lines of code in project: 45136
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Make Method Non Final" applied at class ProcessingInstruction to method toString()
Iteration 2: "Make Method Static" applied at class StreamingXHTMLPurifier to method makeDocType(java.lang.String,java.lang.String,java.lang.String)
Iteration 3: "Make Method Final" applied at class BudgetData to method splitLine(java.lang.String)
Iteration 4: "Make Method Final" applied at class XOMChecker to method main(java.lang.String[])
Iteration 5: "Move Method Down" applied to method findActualBaseURI() from ParentNode to Element
Iteration 6: "Make Method Static" applied at class Document to method isDocument()
Iteration 7: "Increase Field Visibility" applied at class PoliteSpider to field XLINK_NS from public to protected
Iteration 8: "Increase Field Visibility" applied at class PoliteSpider to field XLINK_NS from protected to package
Iteration 9: "Decrease Method Visibility" applied at class TreeWalker to method serializeUTF16(nu.xom.Document,java.io.OutputStream) from private to package
Iteration 10: "Move Field Up" applied to field children from ParentNode to Node
Iteration 11: "Decrease Method Visibility" applied at class DocType to method _setSystemID(java.lang.String) from private to package
Iteration 12: "Make Method Final" applied at class FibonacciAttributes to method main(java.lang.String[])
Iteration 13: "Decrease Method Visibility" applied at class DocType to method _setSystemID(java.lang.String) from package to protected
Iteration 14: "Decrease Method Visibility" applied at class XHTMLJavaDoc\HTMLSerializer to method HTMLSerializer(java.io.OutputStream) from package to protected
Iteration 15: "Increase Field Visibility" applied at class XLinkSpider to field XLINK_NS from public to protected
Iteration 16: "Decrease Field Visibility" applied at class FibonacciXMLRPCClient to field defaultServer from private to package
Iteration 17: "Make Class Non Final" applied to class NonRecursiveSerializer
Iteration 18: "Decrease Method Visibility" applied at class Text to method Text() from private to package
Iteration 19: "Move Field Down" applied to field children from Node to ParentNode
Iteration 20: "Decrease Method Visibility" applied at class XSLTransform to method transform(javax.xml.transform.Source) from private to package
Iteration 21: "Decrease Field Visibility" applied at class InnerTest to field builder from private to package
Iteration 22: "Make Method Non Static" applied at class NodeLister to method listChildren(nu.xom.Node,int)
Iteration 23: "Decrease Method Visibility" applied at class XPathException to method setXPath(java.lang.String) from package to protected
Iteration 24: "Make Class Final" applied to class XHTMLQualifier
Iteration 25: "Decrease Field Visibility" applied at class DatabaseBuilder to field connection from private to package
Iteration 26: "Decrease Field Visibility" applied at class DatabaseBuilder to field connection from package to protected
Iteration 27: "Make Class Final" applied to class Latin4Writer
Iteration 28: "Make Method Static" applied at class XOMReader to method setFeature(java.lang.String,boolean)
Iteration 29: "Increase Field Visibility" applied at class ResourceToTable to field RDDL_NAMESPACE from public to protected
Iteration 30: "Make Method Non Final" applied at class Comment to method getValue()
Iteration 31: "Make Field Static" applied at class StreamingElementLister to field empty
Iteration 32: "Make Field Static" applied at class XOMHandler to field finishedCDATA
Iteration 33: "Decrease Method Visibility" applied at class ExampleLister to method findExamples(nu.xom.Element) from private to package
Iteration 34: "Make Method Final" applied at class XOMHandler to method freeMemory()
Iteration 35: "Make Method Final" applied at class RDDLFilter to method startMakingElement(java.lang.String,java.lang.String)
Iteration 36: "Increase Field Visibility" applied at class PoliteSpider to field XLINK_NS from package to private
Iteration 37: "Decrease Method Visibility" applied at class ProcessingInstruction to method ProcessingInstruction() from private to package
Iteration 38: "Make Class Abstract" applied to class XPointerException

Score has improved overall by 0.624551
Time taken to refactor: 1018.84s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.504624
Average coupling per class: 0.982143
Average cohesion among methods per class: 0.532165
Average amount of user defined attributes declared per class: 0.254464
Average functional abstraction per class: 0.195326
Average amount of polymorphic methods per class: 0.285714
Average amount of public methods per class: 3.441964
Average amount of methods per class: 5.660714
Average amount of complexity of methods per class: 117.977676
Ratio of interfaces to overall amount of classes: 0.000000
Average ratio of abstract classes/methods per class: 0.002932
Average ratio of static classes/methods/variables per class: 0.313712
Average ratio of final classes/methods/variables per class: 0.047673
Average ratio of constant classes/methods/variables per class: 0.064028
Ratio of inner classes to overall amount of ordinary classes in project: 0.089286
Average inherited referenced methods ratio per class: 0.067043
Average visibility ratio per class: 0.593009
Amount of lines of code in project: 45136
Overall fitness function score: 0.624551