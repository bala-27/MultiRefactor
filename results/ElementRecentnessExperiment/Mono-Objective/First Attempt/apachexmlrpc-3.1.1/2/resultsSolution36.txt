======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.530811
Average coupling per class: 0.994595
Average cohesion among methods per class: 0.486189
Average amount of user defined attributes declared per class: 0.594595
Average functional abstraction per class: 0.320375
Average amount of polymorphic methods per class: 0.589189
Average amount of public methods per class: 2.870270
Average amount of methods per class: 4.237838
Average amount of complexity of methods per class: 30.735136
Ratio of interfaces to overall amount of classes: 0.200000
Average ratio of abstract classes/methods per class: 0.234299
Average ratio of static classes/methods/variables per class: 0.137684
Average ratio of final classes/methods/variables per class: 0.106994
Average ratio of constant classes/methods/variables per class: 0.089900
Ratio of inner classes to overall amount of ordinary classes in project: 0.129730
Average inherited referenced methods ratio per class: 0.279704
Average visibility ratio per class: 0.588081
Amount of lines of code in project: 14241
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Decrease Method Visibility" applied at class RequestProcessorFactoryFactory\RequestSpecificProcessorFactoryFactory to method getRequestProcessor(java.lang.Class,org.apache.xmlrpc.XmlRpcRequest) from protected to public
Iteration 2: "Decrease Method Visibility" applied at class WebServer to method newThreadPool() from protected to public
Iteration 3: "Decrease Method Visibility" applied at class RecursiveTypeParserImpl to method RecursiveTypeParserImpl(org.apache.xmlrpc.common.XmlRpcStreamConfig,org.apache.ws.commons.util.NamespaceContextImpl,org.apache.xmlrpc.common.TypeFactory) from protected to public
Iteration 4: "Make Class Final" applied to class XmlRpcSystemImpl
Iteration 5: "Decrease Method Visibility" applied at class XmlRpcServer to method getDefaultXmlRpcWorkerFactory() from protected to public
Iteration 6: "Make Method Final" applied at class DateSerializer to method write(org.xml.sax.ContentHandler,java.lang.Object)
Iteration 7: "Make Field Static" applied at class XmlRpcTransportFactoryImpl to field client
Iteration 8: "Decrease Method Visibility" applied at class XmlRpcHttpServerConfig to method isKeepAliveEnabled() from package to protected
Iteration 9: "Make Field Final" applied at class XmlRpcHandler to ParameterDeclaration pRequest [in method execute(org.apache.xmlrpc.XmlRpcRequest)]
Iteration 10: "Make Class Final" applied to class XmlRpcLocalStreamServer
Iteration 11: "Decrease Method Visibility" applied at class AbstractReflectiveHandlerMapping to method getMethodHelp(java.lang.Class,java.lang.reflect.Method[]) from protected to public
Iteration 12: "Increase Field Visibility" applied at class JaxbSerializer to field JAXB_TAG from public to protected
Iteration 13: "Make Field Static" applied at class XmlRpcLocalTransportFactory to field LOCAL_TRANSPORT
Iteration 14: "Move Field Up" applied to field EX_I2_TAG from I2Serializer to TypeSerializerImpl
Iteration 15: "Make Class Abstract" applied to class XmlRpcLiteHttpTransportFactory
Iteration 16: "Move Field Up" applied to field USER_AGENT from XmlRpcHttpTransport to XmlRpcStreamTransport
Iteration 17: "Make Method Final" applied at class I1Serializer to method write(org.xml.sax.ContentHandler,java.lang.Object)
Iteration 18: "Decrease Method Visibility" applied at class TypeConverterFactory to method getTypeConverter(java.lang.Class) from package to protected
Iteration 19: "Move Method Up" applied to method execute(org.apache.xmlrpc.XmlRpcRequest) from XmlRpcLocalStreamServer to XmlRpcStreamServer
Iteration 20: "Decrease Method Visibility" applied at class TypeConverterFactory to method getTypeConverter(java.lang.Class) from protected to public
Iteration 21: "Make Class Abstract" applied to class XmlRpcServer
Iteration 22: "Make Method Non Static" applied at class XmlRpcSystemImpl to method addSystemHandler(org.apache.xmlrpc.server.PropertyHandlerMapping)
Iteration 23: "Remove Class" applied to class XmlRpcLocalStreamServer
Iteration 24: "Make Class Final" applied to class XmlRpcLocalTransport
Iteration 25: "Decrease Method Visibility" applied at class XmlRpcClient to method getDefaultXmlRpcWorkerFactory() from protected to public
Iteration 26: "Move Field Down" applied to field USER_AGENT from XmlRpcStreamTransport to XmlRpcHttpTransport
Iteration 27: "Make Field Non Final" applied at class XmlRpcStreamServer to ParameterDeclaration pConfig [in method getRequest(org.apache.xmlrpc.common.XmlRpcStreamRequestConfig,java.io.InputStream)]
Iteration 28: "Remove Method" applied at class ServerHttpConnection to method setResponseHeader(java.lang.String,java.lang.String)
Iteration 29: "Make Method Static" applied at class XmlRpcServer to method getDefaultXmlRpcWorkerFactory()
Iteration 30: "Make Field Final" applied at class XmlRpcSun15HttpTransport to FieldDeclaration proxy
Iteration 31: "Decrease Field Visibility" applied at class DateSerializer to field format from private to package
Iteration 32: "Increase Method Visibility" applied at class TypeConverterFactoryImpl\ListTypeConverter to method newList(int) from protected to package
Iteration 33: "Remove Method" applied at class XmlRpcServerConfigImpl to method setEnabledForExceptions(boolean)
Iteration 34: "Decrease Method Visibility" applied at class CharSetXmlWriterFactory to method newXmlWriter() from protected to public
Iteration 35: "Make Class Final" applied to class XmlRpcSunHttpTransportFactory
Iteration 36: "Make Class Concrete" applied to class XmlRpcTransportFactoryImpl
Iteration 37: "Make Class Abstract" applied to class XmlRpcTransportFactoryImpl
Iteration 38: "Make Field Final" applied at class XmlRpcStreamServer to ParameterDeclaration pRequest [in method execute(org.apache.xmlrpc.XmlRpcRequest)]
Iteration 39: "Make Field Non Static" applied at class XmlRpcCommonsTransport to field MAX_REDIRECT_ATTEMPTS
Iteration 40: "Move Method Up" applied to method isUsingByteArrayOutput(org.apache.xmlrpc.client.XmlRpcHttpClientConfig) from XmlRpcHttpTransport to XmlRpcStreamTransport
Iteration 41: "Make Method Static" applied at class XmlRpcServerWorkerFactory to method newWorker()
Iteration 42: "Make Class Final" applied to class Util
Iteration 43: "Make Method Non Static" applied at class Connection to method toHTTPBytes(java.lang.String)
Iteration 44: "Make Method Static" applied at class XmlRpcServletServer to method newConfig(javax.servlet.http.HttpServletRequest)
Iteration 45: "Decrease Field Visibility" applied at class XmlRpcResponseParser to field errorCause from private to package
Iteration 46: "Increase Field Visibility" applied at class NullSerializer to field EX_NIL_TAG from public to protected
Iteration 47: "Make Field Static" applied at class XmlRpcIOException to field linkedException
Iteration 48: "Move Field Up" applied to field USER_AGENT from XmlRpcHttpTransport to XmlRpcStreamTransport
Iteration 49: "Make Method Static" applied at class XmlRpcServletServer to method newStreamConnection(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)

Score has improved overall by 0.182672
Time taken to refactor: 412.47s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.540942
Average coupling per class: 1.005435
Average cohesion among methods per class: 0.484956
Average amount of user defined attributes declared per class: 0.597826
Average functional abstraction per class: 0.318040
Average amount of polymorphic methods per class: 0.592391
Average amount of public methods per class: 2.923913
Average amount of methods per class: 4.250000
Average amount of complexity of methods per class: 30.880434
Ratio of interfaces to overall amount of classes: 0.201087
Average ratio of abstract classes/methods per class: 0.237861
Average ratio of static classes/methods/variables per class: 0.144259
Average ratio of final classes/methods/variables per class: 0.113043
Average ratio of constant classes/methods/variables per class: 0.093369
Ratio of inner classes to overall amount of ordinary classes in project: 0.130435
Average inherited referenced methods ratio per class: 0.279794
Average visibility ratio per class: 0.593559
Amount of lines of code in project: 14207
Overall fitness function score: 0.182672