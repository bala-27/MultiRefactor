======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.489492
Average coupling per class: 1.094828
Average cohesion among methods per class: 0.349955
Average amount of user defined attributes declared per class: 0.784483
Average functional abstraction per class: 0.063612
Average amount of polymorphic methods per class: 1.094828
Average amount of public methods per class: 4.129310
Average amount of methods per class: 6.500000
Average amount of complexity of methods per class: 66.758621
Ratio of interfaces to overall amount of classes: 0.293103
Average ratio of abstract classes/methods per class: 0.331715
Average ratio of static classes/methods/variables per class: 0.138329
Average ratio of final classes/methods/variables per class: 0.097604
Average ratio of constant classes/methods/variables per class: 0.094883
Ratio of inner classes to overall amount of ordinary classes in project: 0.025862
Average inherited referenced methods ratio per class: 0.043966
Average visibility ratio per class: 0.570334
Amount of lines of code in project: 18786
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Decrease Method Visibility" applied at class GraphIterator to method GraphIterator(java.util.Iterator,org.jrdf.graph.GraphElementFactory,org.jrdf.graph.mem.GraphHandler) from package to protected
Iteration 2: "Move Field Up" applied to field VALUE from RDF to Vocabulary
Iteration 3: "Decrease Field Visibility" applied at class JrdfConnectionFactory to field JRDF_NAMESPACE from private to package
Iteration 4: "Move Field Up" applied to field LIST from RDF to Vocabulary
Iteration 5: "Decrease Method Visibility" applied at class LiteralImpl to method LiteralImpl(java.lang.String,java.lang.String) from package to protected
Iteration 6: "Make Method Final" applied at class ParameterUtil to method checkNotNull(java.lang.String,java.lang.Object)
Iteration 7: "Make Method Non Static" applied at class DefaultSparqlConnectionUnitTest to method suite()
Iteration 8: "Make Field Non Static" applied at class AbstractGraphUnitTest to field TEST_STR1
Iteration 9: "Make Class Final" applied to class TripleFactoryImpl
Iteration 10: "Decrease Field Visibility" applied at class JrdfConnectionFactory to field JRDF_NAMESPACE from package to protected
Iteration 11: "Decrease Method Visibility" applied at class TripleFactoryImpl to method TripleFactoryImpl(org.jrdf.graph.Graph,org.jrdf.graph.GraphElementFactory) from package to protected
Iteration 12: "Decrease Method Visibility" applied at class BlankNodeImpl to method getUID() from private to package
Iteration 13: "Decrease Method Visibility" applied at class URIReferenceImpl to method URIReferenceImpl(java.net.URI,java.lang.Long) from package to protected
Iteration 14: "Decrease Method Visibility" applied at class BlankNodeImpl to method getUID() from package to protected
Iteration 15: "Decrease Method Visibility" applied at class ParseErrorListener to method warning(java.lang.String,int,int) from package to protected
Iteration 16: "Decrease Method Visibility" applied at class ParseErrorListener to method warning(java.lang.String,int,int) from protected to public
Iteration 17: "Decrease Field Visibility" applied at class RdfXmlParserExample to field DEFAULT_RDF_URL from private to package
Iteration 18: "Decrease Field Visibility" applied at class DefaultSparqlConnection to field securityDomain from private to package
Iteration 19: "Decrease Field Visibility" applied at class RdfXmlParserExample to field DEFAULT_RDF_URL from package to protected
Iteration 20: "Decrease Field Visibility" applied at class DefaultSparqlConnection to field securityDomain from package to protected
Iteration 21: "Make Method Static" applied at class DefaultQueryUnitTest to method testCreate()
Iteration 22: "Move Field Up" applied to field PROPERTY from RDF to Vocabulary
Iteration 23: "Move Field Up" applied to field baseURI from RDFS to Vocabulary
Iteration 24: "Make Field Final" applied at class Vocabulary to FieldDeclaration resources
Iteration 25: "Decrease Method Visibility" applied at class Alternative to method containsAll(java.util.Collection) from package to protected
Iteration 26: "Move Field Up" applied to field RESOURCE from RDFS to Vocabulary
Iteration 27: "Decrease Method Visibility" applied at class URIReferenceImpl to method URIReferenceImpl(java.net.URI,boolean,java.lang.Long) from package to protected
Iteration 28: "Move Method Down" applied to method testEmpty() from AbstractGraphUnitTest to GraphImplUnitTest
Iteration 29: "Decrease Method Visibility" applied at class ParameterChecker to method paramAllowed(java.lang.Object) from package to protected
Iteration 30: "Make Class Final" applied to class TypedNodeVisitorAdapter
Iteration 31: "Decrease Method Visibility" applied at class Alternative to method containsAll(java.util.Collection) from protected to public
Iteration 32: "Make Field Static" applied at class Atts to field _attributes
Iteration 33: "Decrease Method Visibility" applied at class EscapeUtil to method EscapeUtil() from private to package
Iteration 34: "Decrease Method Visibility" applied at class URIReferenceImpl to method URIReferenceImpl(java.net.URI,boolean,java.lang.Long) from protected to public
Iteration 35: "Decrease Method Visibility" applied at class TripleImpl to method TripleImpl(org.jrdf.graph.SubjectNode,org.jrdf.graph.PredicateNode,org.jrdf.graph.ObjectNode) from package to protected
Iteration 36: "Increase Method Visibility" applied at class XmlUtil to method isExtender(char) from public to protected
Iteration 37: "Decrease Method Visibility" applied at class GraphIterator to method GraphIterator(java.util.Iterator,org.jrdf.graph.GraphElementFactory,org.jrdf.graph.mem.GraphHandler) from protected to public
Iteration 38: "Decrease Method Visibility" applied at class StatementHandler to method handleStatement(org.jrdf.graph.SubjectNode,org.jrdf.graph.PredicateNode,org.jrdf.graph.ObjectNode) from package to protected
Iteration 39: "Increase Field Visibility" applied at class GraphHandler012 to field graph from protected to package
Iteration 40: "Make Class Final" applied to class EmptyClosableIterator
Iteration 41: "Make Class Final" applied to class EscapeUtilUnitTest
Iteration 42: "Remove Field" applied at class Parser to field DT_IGNORE
Iteration 43: "Decrease Method Visibility" applied at class EscapeUtil to method EscapeUtil() from package to protected
Iteration 44: "Decrease Method Visibility" applied at class TripleImpl to method TripleImpl(org.jrdf.graph.SubjectNode,org.jrdf.graph.PredicateNode,org.jrdf.graph.ObjectNode) from protected to public
Iteration 45: "Increase Method Visibility" applied at class XmlUtil to method isExtender(char) from protected to package
Iteration 46: "Decrease Method Visibility" applied at class StatementHandler to method handleStatement(org.jrdf.graph.SubjectNode,org.jrdf.graph.PredicateNode,org.jrdf.graph.ObjectNode) from protected to public
Iteration 47: "Increase Field Visibility" applied at class GraphHandler012 to field graph from package to private
Iteration 48: "Move Method Down" applied to method testTwoGraphs() from AbstractGraphElementFactoryUnitTest to GraphElementFactoryImplUnitTest
Iteration 49: "Make Field Final" applied at class AlreadyReifiedException to ParameterDeclaration newCause [in method AlreadyReifiedException(java.lang.String,java.lang.Throwable)]

Score has improved overall by 0.334002
Time taken to refactor: 379.00s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.483498
Average coupling per class: 1.094828
Average cohesion among methods per class: 0.349645
Average amount of user defined attributes declared per class: 0.784483
Average functional abstraction per class: 0.073342
Average amount of polymorphic methods per class: 1.094828
Average amount of public methods per class: 4.172414
Average amount of methods per class: 6.500000
Average amount of complexity of methods per class: 66.758621
Ratio of interfaces to overall amount of classes: 0.293103
Average ratio of abstract classes/methods per class: 0.332180
Average ratio of static classes/methods/variables per class: 0.142925
Average ratio of final classes/methods/variables per class: 0.109569
Average ratio of constant classes/methods/variables per class: 0.099678
Ratio of inner classes to overall amount of ordinary classes in project: 0.025862
Average inherited referenced methods ratio per class: 0.043966
Average visibility ratio per class: 0.584020
Amount of lines of code in project: 18786
Overall fitness function score: 0.334002