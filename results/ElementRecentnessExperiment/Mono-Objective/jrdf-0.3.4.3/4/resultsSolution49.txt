======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.489492
Average coupling per class: 1.094828
Average cohesion among methods per class: 0.349955
Average amount of user defined attributes declared per class: 0.784483
Average functional abstraction per class: 0.063612
Average amount of polymorphic methods per class: 1.094828
Average amount of public methods per class: 4.129310
Average amount of methods per class: 6.500000
Average amount of complexity of methods per class: 66.758621
Ratio of interfaces to overall amount of classes: 0.293103
Average ratio of abstract classes/methods per class: 0.331715
Average ratio of static classes/methods/variables per class: 0.138329
Average ratio of final classes/methods/variables per class: 0.097604
Average ratio of constant classes/methods/variables per class: 0.094883
Ratio of inner classes to overall amount of ordinary classes in project: 0.025862
Average inherited referenced methods ratio per class: 0.043966
Average visibility ratio per class: 0.570334
Amount of lines of code in project: 18786
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Remove Method" applied at class GraphImpl to method dumpIndex(java.util.Map)
Iteration 2: "Decrease Method Visibility" applied at class ParameterUtilUnitTest to method checkStringNotAllowed(java.lang.String) from private to package
Iteration 3: "Decrease Method Visibility" applied at class SparqlQueryBuilderUnitTest to method checkBadParam(org.jrdf.sparql.SparqlQueryBuilder,java.lang.String) from private to package
Iteration 4: "Decrease Method Visibility" applied at class Literal to method getDatatypeURI() from package to protected
Iteration 5: "Decrease Method Visibility" applied at class TripleFactoryImpl to method TripleFactoryImpl(org.jrdf.graph.Graph,org.jrdf.graph.GraphElementFactory) from package to protected
Iteration 6: "Move Method Down" applied to method testFactory() from AbstractGraphUnitTest to GraphImplUnitTest
Iteration 7: "Move Field Up" applied to field PROPERTY from RDF to Vocabulary
Iteration 8: "Move Method Up" applied to method newGraph() from TripleFactoryUnitTest to AbstractTripleFactoryUnitTest
Iteration 9: "Decrease Method Visibility" applied at class Bag to method removeAll(java.util.Collection) from package to protected
Iteration 10: "Decrease Method Visibility" applied at class ParameterUtilUnitTest to method checkStringNotAllowed(java.lang.String) from package to protected
Iteration 11: "Decrease Method Visibility" applied at class SparqlQueryBuilderUnitTest to method checkBadParam(org.jrdf.sparql.SparqlQueryBuilder,java.lang.String) from package to protected
Iteration 12: "Decrease Method Visibility" applied at class ParameterUtilUnitTest to method checkStringNotAllowed(java.lang.String) from protected to public
Iteration 13: "Decrease Method Visibility" applied at class Bag to method removeAll(java.util.Collection) from protected to public
Iteration 14: "Decrease Method Visibility" applied at class SparqlQueryBuilderUnitTest to method checkBadParam(org.jrdf.sparql.SparqlQueryBuilder,java.lang.String) from protected to public
Iteration 15: "Decrease Method Visibility" applied at class Literal to method getDatatypeURI() from protected to public
Iteration 16: "Decrease Method Visibility" applied at class TripleFactoryImpl to method TripleFactoryImpl(org.jrdf.graph.Graph,org.jrdf.graph.GraphElementFactory) from protected to public
Iteration 17: "Move Field Up" applied to field IS_DEFINED_BY from RDFS to Vocabulary
Iteration 18: "Make Field Static" applied at class LiteralImpl to field id
Iteration 19: "Decrease Field Visibility" applied at class GraphException to field serialVersionUID from private to package
Iteration 20: "Make Field Static" applied at class AbstractTripleFactoryUnitTest to field ref3
Iteration 21: "Decrease Method Visibility" applied at class JrdfExample to method print(java.lang.String,java.util.Iterator) from private to package
Iteration 22: "Make Field Final" applied at class TypedNodeVisitor to ParameterDeclaration uriReference [in method visitURIReference(org.jrdf.graph.URIReference)]
Iteration 23: "Decrease Method Visibility" applied at class UIDGeneratorUnitTest to method testUIDGeneratorClass(java.lang.Class) from private to package
Iteration 24: "Make Field Final" applied at class JrdfConnectionException to ParameterDeclaration message [in method JrdfConnectionException(java.lang.String)]
Iteration 25: "Increase Method Visibility" applied at class EmtpyStringCheckerUnitTest to method testParamAllowed() from public to protected
Iteration 26: "Decrease Field Visibility" applied at class AbstractURIReference to field serialVersionUID from private to package
Iteration 27: "Decrease Method Visibility" applied at class JrdfExample to method print(java.lang.String,java.util.Iterator) from package to protected
Iteration 28: "Decrease Method Visibility" applied at class UIDGeneratorUnitTest to method testUIDGeneratorClass(java.lang.Class) from package to protected
Iteration 29: "Increase Method Visibility" applied at class EmtpyStringCheckerUnitTest to method testParamAllowed() from protected to package
Iteration 30: "Decrease Field Visibility" applied at class AbstractURIReference to field serialVersionUID from package to protected
Iteration 31: "Move Method Down" applied to method testEmpty() from AbstractGraphUnitTest to GraphImplUnitTest
Iteration 32: "Decrease Method Visibility" applied at class ClosableIterator to method close() from package to protected
Iteration 33: "Make Method Final" applied at class RdfXmlParser\1985099544\1277080369 to method handleStatement(org.jrdf.graph.SubjectNode,org.jrdf.graph.PredicateNode,org.jrdf.graph.ObjectNode)
Iteration 34: "Decrease Method Visibility" applied at class TripleImpl to method TripleImpl(org.jrdf.graph.GraphElementFactory,java.lang.Long,java.lang.Long,java.lang.Long) from package to protected
Iteration 35: "Decrease Method Visibility" applied at class ClosableIterator to method close() from protected to public
Iteration 36: "Decrease Method Visibility" applied at class TripleImpl to method TripleImpl(org.jrdf.graph.GraphElementFactory,java.lang.Long,java.lang.Long,java.lang.Long) from protected to public
Iteration 37: "Decrease Method Visibility" applied at class EscapeUtilUnitTest to method testEscapedValue(java.lang.String,java.lang.String) from private to package
Iteration 38: "Decrease Field Visibility" applied at class GraphException to field serialVersionUID from package to protected
Iteration 39: "Remove Field" applied at class RDFS to field serialVersionUID
Iteration 40: "Decrease Method Visibility" applied at class ThreeFixedIterator to method ThreeFixedIterator(org.jrdf.graph.Graph,org.jrdf.graph.Node,org.jrdf.graph.Node,org.jrdf.graph.Node) from package to protected
Iteration 41: "Make Class Final" applied to class Atts
Iteration 42: "Decrease Method Visibility" applied at class ParseErrorListener to method error(java.lang.String,int,int) from package to protected
Iteration 43: "Decrease Method Visibility" applied at class EscapeUtilUnitTest to method testEscapedValue(java.lang.String,java.lang.String) from package to protected
Iteration 44: "Decrease Field Visibility" applied at class GraphException to field serialVersionUID from protected to public
Iteration 45: "Decrease Method Visibility" applied at class ThreeFixedIterator to method ThreeFixedIterator(org.jrdf.graph.Graph,org.jrdf.graph.Node,org.jrdf.graph.Node,org.jrdf.graph.Node) from protected to public
Iteration 46: "Decrease Method Visibility" applied at class ParseErrorListener to method error(java.lang.String,int,int) from protected to public
Iteration 47: "Make Method Static" applied at class EmptyClosableIterator to method hasNext()
Iteration 48: "Make Method Final" applied at class SparqlQueryBuilder to method buildQuery(java.lang.String)
Iteration 49: "Make Class Concrete" applied to class AbstractTripleFactory
Iteration 50: "Increase Field Visibility" applied at class GraphHandler201 to field graph from protected to package
Iteration 51: "Remove Method" applied at class DefaultQueryUnitTest to method testCreate()
Iteration 52: "Decrease Field Visibility" applied at class Vocabulary to field serialVersionUID from private to package
Iteration 53: "Decrease Field Visibility" applied at class Vocabulary to field serialVersionUID from package to protected
Iteration 54: "Make Method Static" applied at class DefaultAnswerUnitTest to method testGetAnswer()
Iteration 55: "Make Field Non Static" applied at class AbstractTripleFactoryUnitTest to field ref3
Iteration 56: "Make Class Final" applied to class TypedNodeVisitorAdapter
Iteration 57: "Make Class Abstract" applied to class AbstractTripleFactory
Iteration 58: "Make Field Non Static" applied at class EscapeUtil to field pattern
Iteration 59: "Make Class Non Final" applied to class JrdfConnectionFactory
Iteration 60: "Remove Class" applied to class DefaultQueryUnitTest
Iteration 61: "Increase Field Visibility" applied at class Vocabulary to field IS_DEFINED_BY from public to protected
Iteration 62: "Make Field Static" applied at class DefaultSparqlConnection to field graph
Iteration 63: "Make Field Final" applied at class AbstractURIReference to ParameterDeclaration visitor [in method accept(org.jrdf.graph.TypedNodeVisitor)]
Iteration 64: "Decrease Field Visibility" applied at class AlreadyReifiedException to field serialVersionUID from private to package
Iteration 65: "Make Method Static" applied at class GraphImplUnitTest to method newGraph()
Iteration 66: "Decrease Method Visibility" applied at class EmtpyStringChecker to method paramAllowed(java.lang.String) from private to package
Iteration 67: "Make Method Non Static" applied at class Vocabulary to method getResources()
Iteration 68: "Make Method Static" applied at class SparqlQueryBuilder to method buildQuery(java.lang.String)
Iteration 69: "Increase Field Visibility" applied at class Vocabulary to field IS_DEFINED_BY from protected to package
Iteration 70: "Decrease Field Visibility" applied at class AlreadyReifiedException to field serialVersionUID from package to protected
Iteration 71: "Decrease Method Visibility" applied at class EmtpyStringChecker to method paramAllowed(java.lang.String) from package to protected
Iteration 72: "Decrease Method Visibility" applied at class Bag to method retainAll(java.util.Collection) from package to protected
Iteration 73: "Decrease Method Visibility" applied at class OneFixedIterator to method OneFixedIterator(java.util.Map,int,java.lang.Long,org.jrdf.graph.GraphElementFactory,org.jrdf.graph.mem.GraphHandler,java.util.Map) from package to protected
Iteration 74: "Increase Method Visibility" applied at class JrdfConnectionFactory to method getSparqlConnection(org.jrdf.graph.Graph,java.net.URI) from public to protected
Iteration 75: "Decrease Method Visibility" applied at class AbstractGraphUnitTest to method AbstractGraphUnitTest(java.lang.String) from protected to public
Iteration 76: "Decrease Method Visibility" applied at class BlankNodeImpl to method getUID() from private to package
Iteration 77: "Decrease Method Visibility" applied at class EscapeUtil to method EscapeUtil() from private to package
Iteration 78: "Make Method Static" applied at class GraphImpl to method close()

Score has improved overall by 0.360840
Time taken to refactor: 467.16s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.482396
Average coupling per class: 1.104348
Average cohesion among methods per class: 0.352754
Average amount of user defined attributes declared per class: 0.791304
Average functional abstraction per class: 0.070820
Average amount of polymorphic methods per class: 1.095652
Average amount of public methods per class: 4.226087
Average amount of methods per class: 6.530435
Average amount of complexity of methods per class: 66.791306
Ratio of interfaces to overall amount of classes: 0.295652
Average ratio of abstract classes/methods per class: 0.334383
Average ratio of static classes/methods/variables per class: 0.151051
Average ratio of final classes/methods/variables per class: 0.102951
Average ratio of constant classes/methods/variables per class: 0.102011
Ratio of inner classes to overall amount of ordinary classes in project: 0.026087
Average inherited referenced methods ratio per class: 0.044348
Average visibility ratio per class: 0.582795
Amount of lines of code in project: 18770
Overall fitness function score: 0.360840