======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.530811
Average coupling per class: 0.994595
Average cohesion among methods per class: 0.486189
Average amount of user defined attributes declared per class: 0.594595
Average functional abstraction per class: 0.320375
Average amount of polymorphic methods per class: 0.589189
Average amount of public methods per class: 2.870270
Average amount of methods per class: 4.237838
Average amount of complexity of methods per class: 30.735136
Ratio of interfaces to overall amount of classes: 0.200000
Average ratio of abstract classes/methods per class: 0.234299
Average ratio of static classes/methods/variables per class: 0.137684
Average ratio of final classes/methods/variables per class: 0.106994
Average ratio of constant classes/methods/variables per class: 0.089900
Ratio of inner classes to overall amount of ordinary classes in project: 0.129730
Average inherited referenced methods ratio per class: 0.279704
Average visibility ratio per class: 0.588081
Amount of lines of code in project: 14241
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Make Method Non Final" applied at class Connection to method toHTTPBytes(java.lang.String)
Iteration 2: "Make Field Static" applied at class XmlRpcLocalStreamTransportFactory to field server
Iteration 3: "Make Field Final" applied at class XmlRpcClientConfigImpl to ParameterDeclaration e [in method cloneMe()]
Iteration 4: "Increase Method Visibility" applied at class XmlRpcHttpRequestConfigImpl to method setReplyTimeout(int) from public to protected
Iteration 5: "Move Method Up" applied to method execute(org.apache.xmlrpc.XmlRpcRequest) from XmlRpcLocalStreamServer to XmlRpcStreamServer
Iteration 6: "Make Method Final" applied at class JaxbParser to method getResult()
Iteration 7: "Increase Method Visibility" applied at class HttpServletResponseImpl to method getStatusMessage(int) from public to protected
Iteration 8: "Remove Class" applied to class XmlRpcLocalStreamServer
Iteration 9: "Remove Method" applied at class Connection\RequestException to method getRequestData()
Iteration 10: "Make Field Static" applied at class XmlRpcIOException to field linkedException
Iteration 11: "Decrease Method Visibility" applied at class RecursiveTypeParserImpl to method RecursiveTypeParserImpl(org.apache.xmlrpc.common.XmlRpcStreamConfig,org.apache.ws.commons.util.NamespaceContextImpl,org.apache.xmlrpc.common.TypeFactory) from protected to public
Iteration 12: "Make Field Final" applied at class ServerHttpConnection to ParameterDeclaration pValue [in method setResponseHeader(java.lang.String,java.lang.String)]
Iteration 13: "Decrease Field Visibility" applied at class XmlRpcNoSuchHandlerException to field serialVersionUID from private to package
Iteration 14: "Make Method Final" applied at class XmlRpcLocalStreamTransport to method close()
Iteration 15: "Make Class Final" applied to class I2Serializer
Iteration 16: "Make Class Non Final" applied to class I2Serializer
Iteration 17: "Decrease Method Visibility" applied at class HttpServletResponseImpl to method getStatusMessage(int) from protected to public
Iteration 18: "Make Class Final" applied to class I2Serializer
Iteration 19: "Make Class Non Final" applied to class I2Serializer
Iteration 20: "Decrease Field Visibility" applied at class XmlRpcNoSuchHandlerException to field serialVersionUID from package to protected
Iteration 21: "Decrease Method Visibility" applied at class XmlRpcHttpClientConfig to method getServerURL() from package to protected
Iteration 22: "Remove Method" applied at class XmlRpcCommonsTransportFactory to method setHttpClient(org.apache.commons.httpclient.HttpClient)
Iteration 23: "Increase Field Visibility" applied at class I8Serializer to field EX_I8_TAG from public to protected
Iteration 24: "Move Field Up" applied to field cfg from RecursiveTypeParserImpl to TypeParserImpl
Iteration 25: "Increase Method Visibility" applied at class XmlRpcSun15HttpTransportFactory to method setProxy(java.lang.String,int) from public to protected
Iteration 26: "Make Method Static" applied at class SerializableParser to method getResult()
Iteration 27: "Decrease Field Visibility" applied at class XmlRpcController to field workerFactory from private to package
Iteration 28: "Decrease Method Visibility" applied at class XmlRpcTransportImpl to method XmlRpcTransportImpl(org.apache.xmlrpc.client.XmlRpcClient) from protected to public
Iteration 29: "Make Method Static" applied at class XmlRpcServer to method getDefaultXmlRpcWorkerFactory()
Iteration 30: "Make Class Final" applied to class DateParser
Iteration 31: "Move Field Up" applied to field sb from AtomicParser to TypeParserImpl
Iteration 32: "Make Method Static" applied at class RequestProcessorFactoryFactory\RequestSpecificProcessorFactoryFactory to method getRequestProcessor(java.lang.Class,org.apache.xmlrpc.XmlRpcRequest)
Iteration 33: "Make Field Static" applied at class ReflectiveXmlRpcMetaDataHandler to field methodHelp
Iteration 34: "Make Field Static" applied at class ServletWebServer\Exception to field statusCode
Iteration 35: "Make Method Final" applied at class DefaultXMLWriterFactory to method getXmlWriter(org.apache.xmlrpc.common.XmlRpcStreamConfig,java.io.OutputStream)
Iteration 36: "Make Field Final" applied at class XmlRpcStreamRequestProcessor to ParameterDeclaration pConnection [in method execute(org.apache.xmlrpc.common.XmlRpcStreamRequestConfig,org.apache.xmlrpc.common.ServerStreamConnection)]
Iteration 37: "Decrease Field Visibility" applied at class XmlRpcWriter to field config from private to package
Iteration 38: "Decrease Method Visibility" applied at class ConnectionServer to method writeError(org.apache.xmlrpc.common.XmlRpcStreamRequestConfig,java.io.OutputStream,java.lang.Throwable) from protected to public

Score has improved overall by 0.202115
Time taken to refactor: 613.73s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.536413
Average coupling per class: 1.000000
Average cohesion among methods per class: 0.486444
Average amount of user defined attributes declared per class: 0.597826
Average functional abstraction per class: 0.318040
Average amount of polymorphic methods per class: 0.592391
Average amount of public methods per class: 2.885870
Average amount of methods per class: 4.250000
Average amount of complexity of methods per class: 30.880434
Ratio of interfaces to overall amount of classes: 0.201087
Average ratio of abstract classes/methods per class: 0.236458
Average ratio of static classes/methods/variables per class: 0.147834
Average ratio of final classes/methods/variables per class: 0.112235
Average ratio of constant classes/methods/variables per class: 0.094242
Ratio of inner classes to overall amount of ordinary classes in project: 0.130435
Average inherited referenced methods ratio per class: 0.279327
Average visibility ratio per class: 0.586364
Amount of lines of code in project: 14207
Overall fitness function score: 0.202115