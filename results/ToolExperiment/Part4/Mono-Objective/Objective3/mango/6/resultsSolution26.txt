======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average amount of user defined attributes declared per class: 0.000000
Average functional abstraction per class: 0.000000
Average amount of polymorphic methods per class: 0.076923
Ratio of interfaces to overall amount of classes: 0.076923
Ratio of inner classes to overall amount of ordinary classes in project: 0.128205
Amount of lines of code in project: 3470
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Decrease Method Security" applied at class RemoveIf to method RemoveIf from private to package
Iteration 2: "Decrease Method Security" applied at class MapFactory to method Builder from private to package
Iteration 3: "Make Field Final" applied at class StringIterator to LocalVariableDeclaration c
Iteration 4: "Decrease Method Security" applied at class SymmetricDifference to method SymmetricDifference from private to package
Iteration 5: "Make Field Non Final" applied at class ChainIterator to FieldDeclaration chain_
Iteration 6: "Increase Field Security" applied at class TeeIterator to field item from public to protected
Iteration 7: "Remove Method" applied at class Bind to method First
Iteration 8: "Decrease Method Security" applied at class Collections to method Collections from private to package
Iteration 9: "Decrease Method Security" applied at class Algorithms to method Algorithms from private to package
Iteration 10: "Make Field Final" applied at class Predicates to ParameterDeclaration constant
Iteration 11: "Decrease Method Security" applied at class SymmetricDifference to method SymmetricDifference from package to protected
Iteration 12: "Make Field Static" applied at class SkippingIterator to field pred_
Iteration 13: "Decrease Method Security" applied at class ForEach to method ForEach from private to package
Iteration 14: "Decrease Method Security" applied at class SymmetricDifference to method SymmetricDifference from protected to public
Iteration 15: "Make Method Static" applied at class NotNull to method test
Iteration 16: "Decrease Method Security" applied at class FindIf to method FindIf from private to package
Iteration 17: "Decrease Method Security" applied at class Transform to method Transform from private to package
Iteration 18: "Decrease Method Security" applied at class Intersection to method Intersection from private to package
Iteration 19: "Decrease Method Security" applied at class BoundedIterator to method listIterator from package to protected
Iteration 20: "Decrease Method Security" applied at class Algorithms to method Algorithms from package to protected
Iteration 21: "Decrease Method Security" applied at class Algorithms to method Algorithms from protected to public
Iteration 22: "Make Class Final" applied to class FindPosition
Iteration 23: "Decrease Method Security" applied at class FindIf to method FindIf from package to protected
Iteration 24: "Increase Method Security" applied at class Predicates to method True from public to protected
Iteration 25: "Decrease Method Security" applied at class FindPosition to method FindPosition from private to package
Iteration 26: "Decrease Method Security" applied at class MapFactory to method Builder from package to protected
Iteration 27: "Decrease Method Security" applied at class FindIf to method FindIf from protected to public
Iteration 28: "Decrease Method Security" applied at class Collections to method Collections from package to protected
Iteration 29: "Make Class Final" applied to class ForEach
Iteration 30: "Decrease Field Security" applied at class False to field INSTANCE from package to protected
Iteration 31: "Decrease Method Security" applied at class Intersection to method Intersection from package to protected

Score has improved overall by 0.000000
Time taken to refactor: 83.89s

======== Final Metric Info ========
Average amount of user defined attributes declared per class: 0.000000
Average functional abstraction per class: 0.000000
Average amount of polymorphic methods per class: 0.076923
Ratio of interfaces to overall amount of classes: 0.076923
Ratio of inner classes to overall amount of ordinary classes in project: 0.128205
Amount of lines of code in project: 3470
Overall fitness function score: 0.000000