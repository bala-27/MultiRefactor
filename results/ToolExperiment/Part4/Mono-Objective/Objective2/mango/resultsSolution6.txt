======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.448718
Average coupling per class: 0.000000
Average cohesion among methods per class: 0.491422
Average amount of methods per class: 4.320513
Average amount of complexity of methods per class: 18.064102
Average ratio of abstract classes/methods per class: 0.076923
Average inherited referenced methods ratio per class: 0.000000
Average visibility ratio per class: 0.741569
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Decrease Method Security" applied at class CountIfNot to method CountIfNot from private to package
Iteration 2: "Increase Method Security" applied at class Iterators to method GeneratorIterator from public to protected
Iteration 3: "Decrease Field Security" applied at class And to field p1_ from private to package
Iteration 4: "Decrease Method Security" applied at class Bind to method Bind from private to package
Iteration 5: "Decrease Method Security" applied at class MapFactory to method Builder from private to package
Iteration 6: "Decrease Method Security" applied at class BinaryPredicates to method BinaryPredicates from private to package
Iteration 7: "Increase Method Security" applied at class BinaryPredicates to method True from public to protected
Iteration 8: "Decrease Method Security" applied at class Intersection to method Intersection from private to package
Iteration 9: "Increase Field Security" applied at class TeeIterator to field index from public to protected
Iteration 10: "Decrease Method Security" applied at class CountIfNot to method CountIfNot from package to protected
Iteration 11: "Increase Method Security" applied at class TeeIterator to method get from public to protected
Iteration 12: "Increase Field Security" applied at class TeeIterator to field index from protected to package
Iteration 13: "Decrease Method Security" applied at class FindIfNot to method FindIfNot from private to package
Iteration 14: "Decrease Method Security" applied at class ForEach to method ForEach from private to package
Iteration 15: "Make Field Final" applied at class FindPositionIf to LocalVariableDeclaration count
Iteration 16: "Remove Method" applied at class Functions to method Identity
Iteration 17: "Decrease Field Security" applied at class TeeIterator to field buffer_ from private to package
Iteration 18: "Decrease Field Security" applied at class StringIterator to field s_ from private to package
Iteration 19: "Decrease Method Security" applied at class Adapt to method wrapMethod from private to package
Iteration 20: "Make Class Final" applied to class CountIfNot

Score has improved overall by 0.050909
Time taken to refactor: 117.91s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.452991
Average coupling per class: 0.000000
Average cohesion among methods per class: 0.493558
Average amount of methods per class: 4.307693
Average amount of complexity of methods per class: 18.012821
Average ratio of abstract classes/methods per class: 0.076923
Average inherited referenced methods ratio per class: 0.000000
Average visibility ratio per class: 0.735685
Overall fitness function score: 0.050909