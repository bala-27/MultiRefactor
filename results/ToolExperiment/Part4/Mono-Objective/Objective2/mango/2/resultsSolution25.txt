======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.448718
Average coupling per class: 0.000000
Average cohesion among methods per class: 0.491422
Average amount of methods per class: 4.320513
Average amount of complexity of methods per class: 18.064102
Average ratio of abstract classes/methods per class: 0.076923
Average inherited referenced methods ratio per class: 0.000000
Average visibility ratio per class: 0.741569
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Decrease Method Security" applied at class Predicates to method Predicates from private to package
Iteration 2: "Decrease Method Security" applied at class Adapt to method wrapMethod from private to package
Iteration 3: "Decrease Method Security" applied at class Adapt to method wrapMethod from package to protected
Iteration 4: "Decrease Method Security" applied at class Remove to method Remove from private to package
Iteration 5: "Decrease Method Security" applied at class Transform to method Transform from private to package
Iteration 6: "Increase Field Security" applied at class TeeIterator to field index from public to protected
Iteration 7: "Decrease Method Security" applied at class Adapt to method wrapMethod from protected to public
Iteration 8: "Decrease Method Security" applied at class Adapt to method verifyReturnType from private to package
Iteration 9: "Decrease Method Security" applied at class BinaryFunctions to method BinaryFunctions from private to package
Iteration 10: "Decrease Method Security" applied at class Intersection to method Intersection from private to package
Iteration 11: "Decrease Method Security" applied at class TeeIterator to method TeeIterator from private to package
Iteration 12: "Decrease Method Security" applied at class MapFactory to method Builder from private to package
Iteration 13: "Decrease Method Security" applied at class MapFactory to method Builder from package to protected
Iteration 14: "Decrease Method Security" applied at class BinaryFunctions to method BinaryFunctions from package to protected
Iteration 15: "Make Method Non Static" applied at class BinaryPredicates to method GreaterThan
Iteration 16: "Decrease Method Security" applied at class Adapt to method AnyUnaryMethodNamed from package to protected
Iteration 17: "Decrease Method Security" applied at class Remove to method Remove from package to protected
Iteration 18: "Decrease Field Security" applied at class NotNull to field INSTANCE from package to protected
Iteration 19: "Make Method Static" applied at class LessThanEquals to method test
Iteration 20: "Make Method Static" applied at class IsNull to method test
Iteration 21: "Decrease Method Security" applied at class FindIfNot to method FindIfNot from private to package
Iteration 22: "Decrease Method Security" applied at class Unique to method Unique from private to package
Iteration 23: "Remove Method" applied at class Functions to method Constant
Iteration 24: "Decrease Method Security" applied at class FindPositionIf to method FindPositionIf from private to package
Iteration 25: "Remove Method" applied at class Generators to method IntegerSequence
Iteration 26: "Remove Method" applied at class Predicates to method True
Iteration 27: "Decrease Method Security" applied at class FindIfNot to method FindIfNot from package to protected
Iteration 28: "Decrease Method Security" applied at class MapFactory to method Builder from protected to public
Iteration 29: "Decrease Method Security" applied at class Predicates to method Predicates from package to protected
Iteration 30: "Remove Method" applied at class Generators to method NullSequence
Iteration 31: "Increase Field Security" applied at class TeeIterator to field item from public to protected
Iteration 32: "Decrease Method Security" applied at class FindPositionIf to method FindPositionIf from package to protected
Iteration 33: "Decrease Method Security" applied at class Remove to method Remove from protected to public
Iteration 34: "Decrease Method Security" applied at class Algorithms to method Algorithms from private to package
Iteration 35: "Make Method Final" applied at class And to method test
Iteration 36: "Decrease Method Security" applied at class BoundedIterator to method iteratorWrapper from package to protected
Iteration 37: "Decrease Method Security" applied at class TeeIterator to method TeeIterator from package to protected
Iteration 38: "Decrease Method Security" applied at class FindPosition to method FindPosition from private to package
Iteration 39: "Remove Method" applied at class Generators to method IntegerSequence
Iteration 40: "Make Field Static" applied at class Xor to field p1_
Iteration 41: "Decrease Method Security" applied at class Count to method execute_null from private to package
Iteration 42: "Remove Method" applied at class Iterators to method GeneratorIterator
Iteration 43: "Decrease Method Security" applied at class Transform to method Transform from package to protected
Iteration 44: "Decrease Field Security" applied at class Bind to field fn_ from private to package
Iteration 45: "Make Method Non Static" applied at class BinaryPredicates to method Or
Iteration 46: "Increase Field Security" applied at class Bind to field fn_ from package to private
Iteration 47: "Decrease Method Security" applied at class Iterators to method Iterators from private to package
Iteration 48: "Make Method Non Final" applied at class And to method test
Iteration 49: "Decrease Method Security" applied at class Intersection to method Intersection from package to protected
Iteration 50: "Remove Method" applied at class Generators to method IntegerSequence
Iteration 51: "Make Method Final" applied at class BinaryPredicates to method EqualTo
Iteration 52: "Make Field Final" applied at class SkippingIterator to LocalVariableDeclaration current
Iteration 53: "Decrease Method Security" applied at class FindIfNot to method FindIfNot from protected to public
Iteration 54: "Decrease Method Security" applied at class SkippingIterator to method findNext from private to package
Iteration 55: "Decrease Method Security" applied at class Algorithms to method Algorithms from package to protected
Iteration 56: "Decrease Method Security" applied at class TeeIterator to method TeeIterator from protected to public
Iteration 57: "Make Method Static" applied at class NotNull to method test
Iteration 59: "Make Method Static" applied at class GeneratorIterator to method hasNext
Iteration 60: "Remove Method" applied at class Algorithms to method unique
Iteration 61: "Decrease Method Security" applied at class FindIf to method FindIf from private to package
Iteration 63: "Decrease Method Security" applied at class FindPositionIf to method FindPositionIf from protected to public
Iteration 64: "Decrease Method Security" applied at class Find to method Find from private to package
Iteration 65: "Make Field Non Final" applied at class Adapt to FieldDeclaration method_
Iteration 66: "Decrease Method Security" applied at class RemoveIf to method RemoveIf from private to package
Iteration 67: "Make Method Non Final" applied at class BinaryPredicates to method EqualTo
Iteration 68: "Decrease Field Security" applied at class All to field preds_ from private to package
Iteration 69: "Increase Field Security" applied at class All to field preds_ from package to private
Iteration 70: "Make Method Final" applied at class NullIterator to method next
Iteration 71: "Decrease Method Security" applied at class Collections to method Collections from private to package
Iteration 72: "Decrease Field Security" applied at class IntegerSequence to field seed_ from private to package
Iteration 71: "Decrease Method Security" applied at class Bind to method Bind from private to package

Score has improved overall by 0.062476
Time taken to refactor: 159.76s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.457265
Average coupling per class: 0.000000
Average cohesion among methods per class: 0.504123
Average amount of methods per class: 4.217949
Average amount of complexity of methods per class: 17.846153
Average ratio of abstract classes/methods per class: 0.076923
Average inherited referenced methods ratio per class: 0.000000
Average visibility ratio per class: 0.755082
Overall fitness function score: 0.062476