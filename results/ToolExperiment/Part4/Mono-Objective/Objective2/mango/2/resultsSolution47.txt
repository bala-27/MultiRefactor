======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.448718
Average coupling per class: 0.000000
Average cohesion among methods per class: 0.491422
Average amount of methods per class: 4.320513
Average amount of complexity of methods per class: 18.064102
Average ratio of abstract classes/methods per class: 0.076923
Average inherited referenced methods ratio per class: 0.000000
Average visibility ratio per class: 0.741569
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Decrease Method Security" applied at class Bind to method Bind from private to package
Iteration 2: "Remove Method" applied at class Generators to method IntegerSequence
Iteration 3: "Remove Method" applied at class Predicates to method True
Iteration 4: "Decrease Method Security" applied at class FindIfNot to method FindIfNot from private to package
Iteration 5: "Decrease Method Security" applied at class MapFactory to method Builder from private to package
Iteration 6: "Decrease Method Security" applied at class Predicates to method Predicates from private to package
Iteration 7: "Remove Method" applied at class Generators to method NullSequence
Iteration 8: "Increase Field Security" applied at class TeeIterator to field item from public to protected
Iteration 9: "Decrease Method Security" applied at class FindPositionIf to method FindPositionIf from private to package
Iteration 10: "Decrease Method Security" applied at class Remove to method Remove from private to package
Iteration 11: "Decrease Method Security" applied at class Algorithms to method Algorithms from private to package
Iteration 12: "Make Method Final" applied at class And to method test
Iteration 13: "Decrease Method Security" applied at class BoundedIterator to method iteratorWrapper from package to protected
Iteration 14: "Decrease Method Security" applied at class TeeIterator to method TeeIterator from private to package
Iteration 15: "Decrease Method Security" applied at class FindPosition to method FindPosition from private to package
Iteration 16: "Remove Method" applied at class Generators to method IntegerSequence
Iteration 17: "Make Field Static" applied at class Xor to field p1_
Iteration 18: "Decrease Method Security" applied at class Count to method execute_null from private to package
Iteration 19: "Remove Method" applied at class Iterators to method GeneratorIterator
Iteration 20: "Make Field Non Final" applied at class Constant to FieldDeclaration value_
Iteration 21: "Remove Method" applied at class Functions to method Compose
Iteration 22: "Decrease Method Security" applied at class RemoveIf to method RemoveIf from private to package
Iteration 23: "Make Method Static" applied at class False to method test
Iteration 24: "Decrease Method Security" applied at class Transform to method Transform from private to package
Iteration 25: "Decrease Method Security" applied at class Intersection to method Intersection from private to package

Score has improved overall by 0.057875
Time taken to refactor: 159.76s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.452991
Average coupling per class: 0.000000
Average cohesion among methods per class: 0.497707
Average amount of methods per class: 4.243590
Average amount of complexity of methods per class: 17.807692
Average ratio of abstract classes/methods per class: 0.076923
Average inherited referenced methods ratio per class: 0.000000
Average visibility ratio per class: 0.738926
Overall fitness function score: 0.057875