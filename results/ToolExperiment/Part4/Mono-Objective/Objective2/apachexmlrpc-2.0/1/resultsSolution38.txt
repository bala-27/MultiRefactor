======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.540530
Average coupling per class: 0.911392
Average cohesion among methods per class: 0.448840
Average amount of methods per class: 6.075949
Average amount of complexity of methods per class: 65.734177
Average ratio of abstract classes/methods per class: 0.279536
Average inherited referenced methods ratio per class: 0.076793
Average visibility ratio per class: 0.743118
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Make Method Non Static" applied at class SimpleXmlRpcClient to method setDebug
Iteration 2: "Move Method Up" applied to method setup from SecureXmlRpcClient to XmlRpcClient
Iteration 3: "Make Class Abstract" applied to class XmlRpcApplet
Iteration 4: "Decrease Method Security" applied at class MinML to method fatalError from private to package
Iteration 5: "Move Field Up" applied to field fault from XmlRpcClientResponseProcessor to XmlRpc
Iteration 7: "Decrease Method Security" applied at class DocumentHandler to method startDocument from package to protected
Iteration 8: "Remove Field" applied at class MinML to field inPossiblyAttribute
Iteration 9: "Make Method Non Final" applied at class XmlWriter to method isValidXMLChar
Iteration 10: "Move Method Down" applied to method setEncoding from XmlRpc to XmlRpcRequestProcessor
Iteration 11: "Move Method Up" applied to method decodeException from XmlRpcClientResponseProcessor to XmlRpc
Iteration 13: "Move Field Down" applied to field fault from XmlRpc to XmlRpcClientResponseProcessor
Iteration 14: "Increase Method Security" applied at class DefaultXmlRpcTransport to method setBasicAuthentication from public to protected
Iteration 15: "Decrease Method Security" applied at class XmlWriter to method emptyElement from protected to public
Iteration 16: "Make Method Static" applied at class XmlRpcClientRequestProcessor to method canReUse
Iteration 17: "Decrease Field Security" applied at class DefaultHandlerMapping to field handlers from private to package
Iteration 19: "Decrease Method Security" applied at class DocumentHandler to method startElement from package to protected
Iteration 20: "Make Field Static" applied at class MinML to field nextIn,lastIn
Iteration 21: "Make Method Static" applied at class AuthDemo to method execute
Iteration 22: "Decrease Method Security" applied at class XmlWriter to method setTypeDecoder from protected to public
Iteration 23: "Make Field Non Static" applied at class DefaultTypeFactory to field dateTool
Iteration 24: "Make Class Abstract" applied to class HandlerBase
Iteration 25: "Move Field Up" applied to field result from XmlRpcClientResponseProcessor to XmlRpc
Iteration 26: "Decrease Method Security" applied at class Parser to method setDocumentHandler from package to protected
Iteration 28: "Make Field Non Final" applied at class XmlWriter to FieldDeclaration PROLOG_START
Iteration 29: "Make Class Concrete" applied to class HandlerBase
Iteration 30: "Remove Method" applied at class WebServer to method acceptClient
Iteration 31: "Move Method Down" applied to method decodeException from XmlRpc to XmlRpcClientResponseProcessor
Iteration 32: "Decrease Method Security" applied at class XmlRpcRequestProcessor to method objectParsed from protected to public
Iteration 33: "Decrease Method Security" applied at class DocumentHandler to method startDocument from protected to public
Iteration 34: "Make Method Non Static" applied at class WebServer to method determinePort
Iteration 35: "Increase Field Security" applied at class DateTool to field FORMAT from protected to package
Iteration 36: "Decrease Method Security" applied at class XmlRpcResponseProcessor to method writeResponse from package to protected

Score has improved overall by 0.086221
Time taken to refactor: 265.68s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.540601
Average coupling per class: 0.924051
Average cohesion among methods per class: 0.447771
Average amount of methods per class: 6.063291
Average amount of complexity of methods per class: 65.569618
Average ratio of abstract classes/methods per class: 0.282113
Average inherited referenced methods ratio per class: 0.076793
Average visibility ratio per class: 0.751074
Overall fitness function score: 0.086221