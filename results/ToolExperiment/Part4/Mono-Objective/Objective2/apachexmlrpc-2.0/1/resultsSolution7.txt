======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.540530
Average coupling per class: 0.911392
Average cohesion among methods per class: 0.448840
Average amount of methods per class: 6.075949
Average amount of complexity of methods per class: 65.734177
Average ratio of abstract classes/methods per class: 0.279536
Average inherited referenced methods ratio per class: 0.076793
Average visibility ratio per class: 0.743118
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Make Method Static" applied at class XmlRpcResponseProcessor to method writeError
Iteration 2: "Make Method Final" applied at class XmlRpcClientResponseProcessor to method decodeException
Iteration 3: "Make Field Non Final" applied at class HttpUtil to FieldDeclaration base64
Iteration 4: "Remove Method" applied at class DefaultXmlRpcTransportFactory to method setBasicAuthentication
Iteration 5: "Make Method Final" applied at class SAXException to method toString
Iteration 6: "Make Class Abstract" applied to class XmlRpcApplet
Iteration 7: "Decrease Method Security" applied at class HttpUtil to method HttpUtil from private to package
Iteration 8: "Decrease Method Security" applied at class XmlRpcClientRequestProcessor to method canReUse from protected to public
Iteration 9: "Move Method Down" applied to method setEncoding from XmlRpc to XmlRpcRequestProcessor
Iteration 10: "Decrease Field Security" applied at class XmlRpc to field BOOLEAN from package to protected
Iteration 11: "Decrease Method Security" applied at class XmlRpcClientLite to method createTransport from protected to public
Iteration 12: "Increase Method Security" applied at class XmlRpcApplet to method initClient from public to protected
Iteration 13: "Make Field Non Static" applied at class WebServer to field HTTP_11
Iteration 14: "Increase Method Security" applied at class SecurityTool to method getTrustStorePassword from public to protected
Iteration 15: "Decrease Field Security" applied at class HttpUtil to field base64 from private to package
Iteration 16: "Make Method Static" applied at class JSXmlRpcApplet to method addStructArgToStruct
Iteration 17: "Make Method Non Final" applied at class XmlWriter to method isValidXMLChar
Iteration 18: "Remove Method" applied at class SAXParseException to method getColumnNumber
Iteration 19: "Make Class Abstract" applied to class HandlerBase
Iteration 20: "Make Field Non Static" applied at class DateTool to field FORMAT
Iteration 21: "Make Class Concrete" applied to class HandlerBase
Iteration 22: "Make Class Abstract" applied to class HandlerBase
Iteration 23: "Move Method Up" applied to method decodeException from XmlRpcClientResponseProcessor to XmlRpc
Iteration 24: "Increase Field Security" applied at class WebServer to field pattern from package to private
Iteration 25: "Make Field Final" applied at class DefaultXmlRpcTransport to LocalVariableDeclaration out
Iteration 26: "Decrease Method Security" applied at class SecurityTool to method getTrustStorePassword from protected to public
Iteration 27: "Make Field Static" applied at class LiteXmlRpcTransport to field hostname
Iteration 28: "Move Field Up" applied to field fault from XmlRpcClientResponseProcessor to XmlRpc
Iteration 29: "Decrease Method Security" applied at class LiteXmlRpcTransport to method closeConnection from protected to public

Score has improved overall by 0.099244
Time taken to refactor: 265.68s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.540557
Average coupling per class: 0.911392
Average cohesion among methods per class: 0.449631
Average amount of methods per class: 6.050633
Average amount of complexity of methods per class: 65.632912
Average ratio of abstract classes/methods per class: 0.282911
Average inherited referenced methods ratio per class: 0.081013
Average visibility ratio per class: 0.746247
Overall fitness function score: 0.099244