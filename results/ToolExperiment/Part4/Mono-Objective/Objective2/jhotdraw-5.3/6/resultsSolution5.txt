======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.613554
Average coupling per class: 1.721992
Average cohesion among methods per class: 0.317246
Average amount of methods per class: 9.298756
Average amount of complexity of methods per class: 56.107883
Average ratio of abstract classes/methods per class: 0.149244
Average inherited referenced methods ratio per class: 0.274818
Average visibility ratio per class: 0.695858
Overall fitness function score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Make Field Static" applied at class ToolButton to field fIcon
Iteration 2: "Move Field Down" applied to field fLocator from NullHandle to GroupHandle
Iteration 3: "Make Method Static" applied at class DiamondFigure to method connectorAt
Iteration 4: "Remove Method" applied at class DecoratorFigure to method readObject
Iteration 5: "Move Method Up" applied to method createUndoActivity from SendToBackCommand to AbstractCommand
Iteration 6: "Make Method Final" applied at class UndoableAdapter to method setDrawingView
Iteration 7: "Increase Method Security" applied at class JavaDrawViewer to method drawing from public to protected
Iteration 8: "Decrease Method Security" applied at class PolygonFigure to method setInternalPolygon from protected to public
Iteration 9: "Make Method Non Static" applied at class UndoRedoActivity to method createUndoRedoActivity
Iteration 10: "Remove Class" applied to class JHotDrawException
Iteration 11: "Make Method Final" applied at class NodeFigure to method drawBorder
Iteration 12: "Remove Field" applied at class StandardDrawing to field serialVersionUID
Iteration 13: "Make Class Abstract" applied to class ResizeHandle
Iteration 14: "Move Method Down" applied to method toString from Alignment to null
Iteration 15: "Remove Method" applied at class PolygonFigure to method points
Iteration 16: "Move Method Up" applied to method deleteFigures from FigureTransferCommand to AbstractCommand
Iteration 17: "Make Method Non Static" applied at class AttributeFigure to method initializeAttributes
Iteration 18: "Increase Method Security" applied at class PolyLineHandle to method getOldPoint from public to protected
Iteration 19: "Remove Method" applied at class DiamondFigure to method chop
Iteration 20: "Move Field Up" applied to field fRelativeY from RelativeLocator to AbstractLocator
Iteration 21: "Decrease Method Security" applied at class AbstractTool to method getEventDispatcher from protected to public
Iteration 22: "Make Method Static" applied at class ToolButton to method toolDeactivated
Iteration 23: "Decrease Method Security" applied at class DrawApplet to method startSleeper from private to package
Iteration 24: "Make Class Final" applied to class NetApp
Iteration 25: "Remove Field" applied at class AttributeFigure to field serialVersionUID
Iteration 26: "Decrease Method Security" applied at class PertFigureCreationTool to method createFigure from protected to public
Iteration 27: "Decrease Field Security" applied at class UndoableTool to field myWrappedTool from private to package
Iteration 28: "Decrease Method Security" applied at class LocatorConnector to method locate from protected to public
Iteration 29: "Make Method Non Static" applied at class TextFigure to method createCurrentFont
Iteration 30: "Increase Method Security" applied at class PolygonFigure to method getPolygon from public to protected
Iteration 31: "Make Class Concrete" applied to class CompositeFigure
Iteration 32: "Increase Method Security" applied at class SelectAllCommand to method isExecutableWithView from public to protected

Score has improved overall by 0.035786
Time taken to refactor: 1055.03s

======== Final Metric Info ========
Average ratio of private/package/protected attributes to overall attributes per class: 0.616111
Average coupling per class: 1.733333
Average cohesion among methods per class: 0.317279
Average amount of methods per class: 9.312500
Average amount of complexity of methods per class: 56.224998
Average ratio of abstract classes/methods per class: 0.151089
Average inherited referenced methods ratio per class: 0.277740
Average visibility ratio per class: 0.695975
Overall fitness function score: 0.035786