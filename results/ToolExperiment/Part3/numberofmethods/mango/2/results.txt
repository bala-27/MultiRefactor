======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average amount of methods per class: 4.320513
Overall score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Decrease Method Security" applied at class FindPositionIf to method FindPositionIf from private to package
Iteration 2: "Remove Method" applied at class Adapt to method Method
Iteration 3: "Decrease Method Security" applied at class CountIfNot to method CountIfNot from private to package
Iteration 4: "Make Class Final" applied to class CountIf
Iteration 5: "Remove Method" applied at class Generators to method IntegerSequence
Iteration 6: "Decrease Method Security" applied at class FindIf to method FindIf from private to package
Iteration 7: "Make Class Final" applied to class ForEach
Iteration 8: "Make Class Non Final" applied to class ForEach
Iteration 9: "Decrease Method Security" applied at class SkippingIterator to method findNext from private to package
Iteration 10: "Decrease Method Security" applied at class FindPositionIf to method FindPositionIf from package to protected
Iteration 11: "Increase Field Security" applied at class TeeIterator to field item from public to protected
Iteration 12: "Decrease Method Security" applied at class Remove to method Remove from private to package

Score has improved overall by 0.020772
Time taken to refactor: 67.98s

======== Final Metric Info ========
Average amount of methods per class: 4.294872
Overall score: 0.020772