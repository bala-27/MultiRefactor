======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average amount of methods per class: 4.320513
Overall score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Remove Method" applied at class Collections to method map
Iteration 2: "Decrease Method Security" applied at class FindPosition to method FindPosition from private to package
Iteration 3: "Decrease Method Security" applied at class FindIf to method FindIf from private to package
Iteration 4: "Decrease Method Security" applied at class SkippingIterator to method findNext from private to package
Iteration 5: "Make Class Final" applied to class And
Iteration 6: "Decrease Method Security" applied at class TeeIterator to method TeeIterator from private to package
Iteration 7: "Decrease Method Security" applied at class Collections to method Collections from private to package
Iteration 8: "Remove Method" applied at class BinaryPredicates to method GreaterThanEquals
Iteration 9: "Make Field Static" applied at class Adapt to field method_
Iteration 10: "Decrease Method Security" applied at class Collections to method Collections from package to protected
Iteration 11: "Decrease Method Security" applied at class SkippingIterator to method findNext from package to protected

Score has improved overall by 0.020772
Time taken to refactor: 67.73s

======== Final Metric Info ========
Average amount of methods per class: 4.294872
Overall score: 0.020772