======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average amount of complexity of methods per class: 65.734177
Overall score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Remove Method" applied at class XmlWriter to method emptyElement
Iteration 2: "Make Class Abstract" applied to class HandlerBase
Iteration 3: "Decrease Field Security" applied at class SAXException to field exception from private to package
Iteration 4: "Decrease Method Security" applied at class XmlRpcClientRequestProcessor to method canReUse from protected to public
Iteration 5: "Make Field Non Static" applied at class MinML to field operands
Iteration 6: "Make Method Static" applied at class Echo to method execute
Iteration 7: "Increase Field Security" applied at class WebServer to field xmlrpc from protected to package
Iteration 8: "Increase Method Security" applied at class SAXException to method getException from public to protected
Iteration 9: "Remove Method" applied at class JSXmlRpcApplet to method execute
Iteration 10: "Increase Method Security" applied at class XmlRpc to method setDriver from public to protected
Iteration 11: "Remove Method" applied at class MinML to method setDocumentHandler
Iteration 12: "Increase Method Security" applied at class SAXParseException to method getLineNumber from public to protected
Iteration 13: "Decrease Method Security" applied at class XmlRpcClientWorker to method canReUse from protected to public
Iteration 14: "Decrease Method Security" applied at class WebServer to method determinePort from protected to public

Score has improved overall by 0.018872
Time taken to refactor: 132.08s

======== Final Metric Info ========
Average amount of complexity of methods per class: 65.291138
Overall score: 0.018872