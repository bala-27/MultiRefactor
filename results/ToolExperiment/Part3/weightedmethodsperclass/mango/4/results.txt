======== Search Information ========
Search: Genetic Algorithm
Generations: 100
Population Size: 50
Crossover Probability: 0.200000
Mutation Probability: 0.800000

======== Initial Metric Info ========
Average amount of complexity of methods per class: 18.064102
Overall score: 0.000000

======== Applied Refactorings ========
Iteration 1: "Decrease Method Security" applied at class RemoveIf to method RemoveIf from private to package
Iteration 2: "Decrease Method Security" applied at class SkippingIterator to method findNext from private to package
Iteration 3: "Decrease Method Security" applied at class ForEach to method ForEach from private to package
Iteration 4: "Increase Field Security" applied at class TeeIterator to field index from public to protected
Iteration 5: "Decrease Method Security" applied at class SkippingIterator to method findNext from package to protected
Iteration 6: "Remove Method" applied at class BinaryPredicates to method True
Iteration 7: "Decrease Method Security" applied at class Bind to method Bind from private to package
Iteration 8: "Remove Method" applied at class Bind to method Second
Iteration 9: "Decrease Method Security" applied at class SkippingIterator to method findNext from protected to public
Iteration 11: "Make Class Final" applied to class Predicates
Iteration 12: "Remove Method" applied at class Bind to method Second
Iteration 13: "Increase Field Security" applied at class TeeIterator to field index from protected to package
Iteration 13: "Decrease Method Security" applied at class CountIfNot to method CountIfNot from private to package

Score has improved overall by 0.019162
Time taken to refactor: 78.79s

======== Final Metric Info ========
Average amount of complexity of methods per class: 17.782051
Overall score: 0.019162